// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ss_login.proto

#ifndef PROTOBUF_ss_5flogin_2eproto__INCLUDED
#define PROTOBUF_ss_5flogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ss_protoid.pb.h"
// @@protoc_insertion_point(includes)

namespace SProtoSpace {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ss_5flogin_2eproto();
void protobuf_AssignDesc_ss_5flogin_2eproto();
void protobuf_ShutdownFile_ss_5flogin_2eproto();

class gm2l_heartbeat_req;
class l2gm_heartbeat_ack;
class gm2l_close_req;

// ===================================================================

class gm2l_heartbeat_req : public ::google::protobuf::Message {
 public:
  gm2l_heartbeat_req();
  virtual ~gm2l_heartbeat_req();

  gm2l_heartbeat_req(const gm2l_heartbeat_req& from);

  inline gm2l_heartbeat_req& operator=(const gm2l_heartbeat_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gm2l_heartbeat_req& default_instance();

  void Swap(gm2l_heartbeat_req* other);

  // implements Message ----------------------------------------------

  gm2l_heartbeat_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gm2l_heartbeat_req& from);
  void MergeFrom(const gm2l_heartbeat_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = gm2l_heartbeat_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.gm2l_heartbeat_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5flogin_2eproto();
  friend void protobuf_AssignDesc_ss_5flogin_2eproto();
  friend void protobuf_ShutdownFile_ss_5flogin_2eproto();

  void InitAsDefaultInstance();
  static gm2l_heartbeat_req* default_instance_;
};
// -------------------------------------------------------------------

class l2gm_heartbeat_ack : public ::google::protobuf::Message {
 public:
  l2gm_heartbeat_ack();
  virtual ~l2gm_heartbeat_ack();

  l2gm_heartbeat_ack(const l2gm_heartbeat_ack& from);

  inline l2gm_heartbeat_ack& operator=(const l2gm_heartbeat_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const l2gm_heartbeat_ack& default_instance();

  void Swap(l2gm_heartbeat_ack* other);

  // implements Message ----------------------------------------------

  l2gm_heartbeat_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const l2gm_heartbeat_ack& from);
  void MergeFrom(const l2gm_heartbeat_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = l2gm_heartbeat_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.l2gm_heartbeat_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5flogin_2eproto();
  friend void protobuf_AssignDesc_ss_5flogin_2eproto();
  friend void protobuf_ShutdownFile_ss_5flogin_2eproto();

  void InitAsDefaultInstance();
  static l2gm_heartbeat_ack* default_instance_;
};
// -------------------------------------------------------------------

class gm2l_close_req : public ::google::protobuf::Message {
 public:
  gm2l_close_req();
  virtual ~gm2l_close_req();

  gm2l_close_req(const gm2l_close_req& from);

  inline gm2l_close_req& operator=(const gm2l_close_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gm2l_close_req& default_instance();

  void Swap(gm2l_close_req* other);

  // implements Message ----------------------------------------------

  gm2l_close_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gm2l_close_req& from);
  void MergeFrom(const gm2l_close_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = gm2l_close_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.gm2l_close_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5flogin_2eproto();
  friend void protobuf_AssignDesc_ss_5flogin_2eproto();
  friend void protobuf_ShutdownFile_ss_5flogin_2eproto();

  void InitAsDefaultInstance();
  static gm2l_close_req* default_instance_;
};
// ===================================================================


// ===================================================================

// gm2l_heartbeat_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = gm2l_heartbeat_req_id];
inline bool gm2l_heartbeat_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gm2l_heartbeat_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gm2l_heartbeat_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gm2l_heartbeat_req::clear_protoid() {
  protoid_ = 70;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID gm2l_heartbeat_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void gm2l_heartbeat_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// -------------------------------------------------------------------

// l2gm_heartbeat_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = l2gm_heartbeat_ack_id];
inline bool l2gm_heartbeat_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void l2gm_heartbeat_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void l2gm_heartbeat_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void l2gm_heartbeat_ack::clear_protoid() {
  protoid_ = 71;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID l2gm_heartbeat_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void l2gm_heartbeat_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// -------------------------------------------------------------------

// gm2l_close_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = gm2l_close_req_id];
inline bool gm2l_close_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gm2l_close_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gm2l_close_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gm2l_close_req::clear_protoid() {
  protoid_ = 72;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID gm2l_close_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void gm2l_close_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SProtoSpace

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ss_5flogin_2eproto__INCLUDED
