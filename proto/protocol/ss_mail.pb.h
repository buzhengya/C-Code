// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ss_mail.proto

#ifndef PROTOBUF_ss_5fmail_2eproto__INCLUDED
#define PROTOBUF_ss_5fmail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ss_protoid.pb.h"
#include "cm_roletype.pb.h"
#include "cs_errorcode.pb.h"
// @@protoc_insertion_point(includes)

namespace SProtoSpace {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ss_5fmail_2eproto();
void protobuf_AssignDesc_ss_5fmail_2eproto();
void protobuf_ShutdownFile_ss_5fmail_2eproto();

class mail_role_enter_game_get_mail_req;
class mail_role_enter_game_get_mail_ack;
class mail_one_role_mail_ntf;
class mail_multi_role_mail_ntf;
class mail_role_set_multi_mail_status_ntf;
class mail_role_del_multi_mail_ntf;
class mail_role_del_multi_mail_req;
class mail_role_del_multi_mail_ack;
class mail_send_all_type_mail_req;
class mail_send_all_type_mail_ack;
class mail_get_game_all_role_ids_req;
class mail_get_game_all_role_ids_ack;
class mail_svr_pressure_ntf;
class del_ss_mul_mails_req;
class del_ss_mul_mails_ack;
class sync_ss_mul_mails_state_req;
class sync_ss_mul_mails_state_ack;
class get_mails_ss_req;
class get_mails_ss_ack;
class gen_mails_ss_req;
class gen_mails_ss_ack;
class send_mail_ss_req;
class send_mail_ss_ack;
class recv_mail_ss_ntf;
class mail_add_template_ss_req;
class mail_add_template_ss_ack;
class mail_add_template_ss_ntf;
class mail_new_template_ss_ntf;
class mail_red_pt_ss_req;
class mail_red_pt_ss_ack;

enum eMailAddTemplateType {
  MAIL_ADD_TEMPLATE_TYPE_NONE = 0,
  MAIL_ADD_TEMPLATE_TYPE_GLOBAL = 1
};
bool eMailAddTemplateType_IsValid(int value);
const eMailAddTemplateType eMailAddTemplateType_MIN = MAIL_ADD_TEMPLATE_TYPE_NONE;
const eMailAddTemplateType eMailAddTemplateType_MAX = MAIL_ADD_TEMPLATE_TYPE_GLOBAL;
const int eMailAddTemplateType_ARRAYSIZE = eMailAddTemplateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eMailAddTemplateType_descriptor();
inline const ::std::string& eMailAddTemplateType_Name(eMailAddTemplateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eMailAddTemplateType_descriptor(), value);
}
inline bool eMailAddTemplateType_Parse(
    const ::std::string& name, eMailAddTemplateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eMailAddTemplateType>(
    eMailAddTemplateType_descriptor(), name, value);
}
// ===================================================================

class mail_role_enter_game_get_mail_req : public ::google::protobuf::Message {
 public:
  mail_role_enter_game_get_mail_req();
  virtual ~mail_role_enter_game_get_mail_req();

  mail_role_enter_game_get_mail_req(const mail_role_enter_game_get_mail_req& from);

  inline mail_role_enter_game_get_mail_req& operator=(const mail_role_enter_game_get_mail_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_role_enter_game_get_mail_req& default_instance();

  void Swap(mail_role_enter_game_get_mail_req* other);

  // implements Message ----------------------------------------------

  mail_role_enter_game_get_mail_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_role_enter_game_get_mail_req& from);
  void MergeFrom(const mail_role_enter_game_get_mail_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_enter_game_get_mail_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 role_mail_time_point = 3;
  inline bool has_role_mail_time_point() const;
  inline void clear_role_mail_time_point();
  static const int kRoleMailTimePointFieldNumber = 3;
  inline ::google::protobuf::uint64 role_mail_time_point() const;
  inline void set_role_mail_time_point(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_role_enter_game_get_mail_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_role_mail_time_point();
  inline void clear_has_role_mail_time_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 role_mail_time_point_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_role_enter_game_get_mail_req* default_instance_;
};
// -------------------------------------------------------------------

class mail_role_enter_game_get_mail_ack : public ::google::protobuf::Message {
 public:
  mail_role_enter_game_get_mail_ack();
  virtual ~mail_role_enter_game_get_mail_ack();

  mail_role_enter_game_get_mail_ack(const mail_role_enter_game_get_mail_ack& from);

  inline mail_role_enter_game_get_mail_ack& operator=(const mail_role_enter_game_get_mail_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_role_enter_game_get_mail_ack& default_instance();

  void Swap(mail_role_enter_game_get_mail_ack* other);

  // implements Message ----------------------------------------------

  mail_role_enter_game_get_mail_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_role_enter_game_get_mail_ack& from);
  void MergeFrom(const mail_role_enter_game_get_mail_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_enter_game_get_mail_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 role_mail_time_point = 3;
  inline bool has_role_mail_time_point() const;
  inline void clear_role_mail_time_point();
  static const int kRoleMailTimePointFieldNumber = 3;
  inline ::google::protobuf::uint64 role_mail_time_point() const;
  inline void set_role_mail_time_point(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_role_enter_game_get_mail_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_role_mail_time_point();
  inline void clear_has_role_mail_time_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 role_mail_time_point_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_role_enter_game_get_mail_ack* default_instance_;
};
// -------------------------------------------------------------------

class mail_one_role_mail_ntf : public ::google::protobuf::Message {
 public:
  mail_one_role_mail_ntf();
  virtual ~mail_one_role_mail_ntf();

  mail_one_role_mail_ntf(const mail_one_role_mail_ntf& from);

  inline mail_one_role_mail_ntf& operator=(const mail_one_role_mail_ntf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_one_role_mail_ntf& default_instance();

  void Swap(mail_one_role_mail_ntf* other);

  // implements Message ----------------------------------------------

  mail_one_role_mail_ntf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_one_role_mail_ntf& from);
  void MergeFrom(const mail_one_role_mail_ntf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_one_role_mail_ntf_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // repeated .SProtoSpace.mail_instance mails = 3;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 3;
  inline const ::SProtoSpace::mail_instance& mails(int index) const;
  inline ::SProtoSpace::mail_instance* mutable_mails(int index);
  inline ::SProtoSpace::mail_instance* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >*
      mutable_mails();

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_one_role_mail_ntf)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance > mails_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_one_role_mail_ntf* default_instance_;
};
// -------------------------------------------------------------------

class mail_multi_role_mail_ntf : public ::google::protobuf::Message {
 public:
  mail_multi_role_mail_ntf();
  virtual ~mail_multi_role_mail_ntf();

  mail_multi_role_mail_ntf(const mail_multi_role_mail_ntf& from);

  inline mail_multi_role_mail_ntf& operator=(const mail_multi_role_mail_ntf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_multi_role_mail_ntf& default_instance();

  void Swap(mail_multi_role_mail_ntf* other);

  // implements Message ----------------------------------------------

  mail_multi_role_mail_ntf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_multi_role_mail_ntf& from);
  void MergeFrom(const mail_multi_role_mail_ntf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_multi_role_mail_ntf_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // repeated .SProtoSpace.mail_instance mails = 2;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 2;
  inline const ::SProtoSpace::mail_instance& mails(int index) const;
  inline ::SProtoSpace::mail_instance* mutable_mails(int index);
  inline ::SProtoSpace::mail_instance* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >*
      mutable_mails();

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_multi_role_mail_ntf)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance > mails_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_multi_role_mail_ntf* default_instance_;
};
// -------------------------------------------------------------------

class mail_role_set_multi_mail_status_ntf : public ::google::protobuf::Message {
 public:
  mail_role_set_multi_mail_status_ntf();
  virtual ~mail_role_set_multi_mail_status_ntf();

  mail_role_set_multi_mail_status_ntf(const mail_role_set_multi_mail_status_ntf& from);

  inline mail_role_set_multi_mail_status_ntf& operator=(const mail_role_set_multi_mail_status_ntf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_role_set_multi_mail_status_ntf& default_instance();

  void Swap(mail_role_set_multi_mail_status_ntf* other);

  // implements Message ----------------------------------------------

  mail_role_set_multi_mail_status_ntf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_role_set_multi_mail_status_ntf& from);
  void MergeFrom(const mail_role_set_multi_mail_status_ntf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_set_multi_mail_status_ntf_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // repeated uint64 mail_ids = 3;
  inline int mail_ids_size() const;
  inline void clear_mail_ids();
  static const int kMailIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 mail_ids(int index) const;
  inline void set_mail_ids(int index, ::google::protobuf::uint64 value);
  inline void add_mail_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mail_ids();

  // optional bool to_set_read = 4;
  inline bool has_to_set_read() const;
  inline void clear_to_set_read();
  static const int kToSetReadFieldNumber = 4;
  inline bool to_set_read() const;
  inline void set_to_set_read(bool value);

  // optional bool to_set_attach_getted = 5;
  inline bool has_to_set_attach_getted() const;
  inline void clear_to_set_attach_getted();
  static const int kToSetAttachGettedFieldNumber = 5;
  inline bool to_set_attach_getted() const;
  inline void set_to_set_attach_getted(bool value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_role_set_multi_mail_status_ntf)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_to_set_read();
  inline void clear_has_to_set_read();
  inline void set_has_to_set_attach_getted();
  inline void clear_has_to_set_attach_getted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mail_ids_;
  int protoid_;
  bool to_set_read_;
  bool to_set_attach_getted_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_role_set_multi_mail_status_ntf* default_instance_;
};
// -------------------------------------------------------------------

class mail_role_del_multi_mail_ntf : public ::google::protobuf::Message {
 public:
  mail_role_del_multi_mail_ntf();
  virtual ~mail_role_del_multi_mail_ntf();

  mail_role_del_multi_mail_ntf(const mail_role_del_multi_mail_ntf& from);

  inline mail_role_del_multi_mail_ntf& operator=(const mail_role_del_multi_mail_ntf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_role_del_multi_mail_ntf& default_instance();

  void Swap(mail_role_del_multi_mail_ntf* other);

  // implements Message ----------------------------------------------

  mail_role_del_multi_mail_ntf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_role_del_multi_mail_ntf& from);
  void MergeFrom(const mail_role_del_multi_mail_ntf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_del_multi_mail_ntf_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // repeated uint64 mail_ids = 3;
  inline int mail_ids_size() const;
  inline void clear_mail_ids();
  static const int kMailIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 mail_ids(int index) const;
  inline void set_mail_ids(int index, ::google::protobuf::uint64 value);
  inline void add_mail_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mail_ids();

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_role_del_multi_mail_ntf)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mail_ids_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_role_del_multi_mail_ntf* default_instance_;
};
// -------------------------------------------------------------------

class mail_role_del_multi_mail_req : public ::google::protobuf::Message {
 public:
  mail_role_del_multi_mail_req();
  virtual ~mail_role_del_multi_mail_req();

  mail_role_del_multi_mail_req(const mail_role_del_multi_mail_req& from);

  inline mail_role_del_multi_mail_req& operator=(const mail_role_del_multi_mail_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_role_del_multi_mail_req& default_instance();

  void Swap(mail_role_del_multi_mail_req* other);

  // implements Message ----------------------------------------------

  mail_role_del_multi_mail_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_role_del_multi_mail_req& from);
  void MergeFrom(const mail_role_del_multi_mail_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_del_multi_mail_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // repeated uint64 mail_ids = 3;
  inline int mail_ids_size() const;
  inline void clear_mail_ids();
  static const int kMailIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 mail_ids(int index) const;
  inline void set_mail_ids(int index, ::google::protobuf::uint64 value);
  inline void add_mail_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mail_ids();

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_role_del_multi_mail_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mail_ids_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_role_del_multi_mail_req* default_instance_;
};
// -------------------------------------------------------------------

class mail_role_del_multi_mail_ack : public ::google::protobuf::Message {
 public:
  mail_role_del_multi_mail_ack();
  virtual ~mail_role_del_multi_mail_ack();

  mail_role_del_multi_mail_ack(const mail_role_del_multi_mail_ack& from);

  inline mail_role_del_multi_mail_ack& operator=(const mail_role_del_multi_mail_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_role_del_multi_mail_ack& default_instance();

  void Swap(mail_role_del_multi_mail_ack* other);

  // implements Message ----------------------------------------------

  mail_role_del_multi_mail_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_role_del_multi_mail_ack& from);
  void MergeFrom(const mail_role_del_multi_mail_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_del_multi_mail_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // repeated uint64 suceed_mail_ids = 3;
  inline int suceed_mail_ids_size() const;
  inline void clear_suceed_mail_ids();
  static const int kSuceedMailIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 suceed_mail_ids(int index) const;
  inline void set_suceed_mail_ids(int index, ::google::protobuf::uint64 value);
  inline void add_suceed_mail_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      suceed_mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_suceed_mail_ids();

  // repeated uint64 failed_mail_ids = 4;
  inline int failed_mail_ids_size() const;
  inline void clear_failed_mail_ids();
  static const int kFailedMailIdsFieldNumber = 4;
  inline ::google::protobuf::uint64 failed_mail_ids(int index) const;
  inline void set_failed_mail_ids(int index, ::google::protobuf::uint64 value);
  inline void add_failed_mail_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      failed_mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_failed_mail_ids();

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_role_del_multi_mail_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > suceed_mail_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > failed_mail_ids_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_role_del_multi_mail_ack* default_instance_;
};
// -------------------------------------------------------------------

class mail_send_all_type_mail_req : public ::google::protobuf::Message {
 public:
  mail_send_all_type_mail_req();
  virtual ~mail_send_all_type_mail_req();

  mail_send_all_type_mail_req(const mail_send_all_type_mail_req& from);

  inline mail_send_all_type_mail_req& operator=(const mail_send_all_type_mail_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_send_all_type_mail_req& default_instance();

  void Swap(mail_send_all_type_mail_req* other);

  // implements Message ----------------------------------------------

  mail_send_all_type_mail_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_send_all_type_mail_req& from);
  void MergeFrom(const mail_send_all_type_mail_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_send_all_type_mail_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // repeated .SProtoSpace.mail_instance private_mails = 2;
  inline int private_mails_size() const;
  inline void clear_private_mails();
  static const int kPrivateMailsFieldNumber = 2;
  inline const ::SProtoSpace::mail_instance& private_mails(int index) const;
  inline ::SProtoSpace::mail_instance* mutable_private_mails(int index);
  inline ::SProtoSpace::mail_instance* add_private_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >&
      private_mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >*
      mutable_private_mails();

  // optional string to_role_name = 3;
  inline bool has_to_role_name() const;
  inline void clear_to_role_name();
  static const int kToRoleNameFieldNumber = 3;
  inline const ::std::string& to_role_name() const;
  inline void set_to_role_name(const ::std::string& value);
  inline void set_to_role_name(const char* value);
  inline void set_to_role_name(const char* value, size_t size);
  inline ::std::string* mutable_to_role_name();
  inline ::std::string* release_to_role_name();
  inline void set_allocated_to_role_name(::std::string* to_role_name);

  // optional uint64 game_session_back = 9;
  inline bool has_game_session_back() const;
  inline void clear_game_session_back();
  static const int kGameSessionBackFieldNumber = 9;
  inline ::google::protobuf::uint64 game_session_back() const;
  inline void set_game_session_back(::google::protobuf::uint64 value);

  // optional int32 global_mail_config_id = 4;
  inline bool has_global_mail_config_id() const;
  inline void clear_global_mail_config_id();
  static const int kGlobalMailConfigIdFieldNumber = 4;
  inline ::google::protobuf::int32 global_mail_config_id() const;
  inline void set_global_mail_config_id(::google::protobuf::int32 value);

  // repeated uint64 group_mail_to_role_ids = 5;
  inline int group_mail_to_role_ids_size() const;
  inline void clear_group_mail_to_role_ids();
  static const int kGroupMailToRoleIdsFieldNumber = 5;
  inline ::google::protobuf::uint64 group_mail_to_role_ids(int index) const;
  inline void set_group_mail_to_role_ids(int index, ::google::protobuf::uint64 value);
  inline void add_group_mail_to_role_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      group_mail_to_role_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_group_mail_to_role_ids();

  // optional int32 group_mail_config_id = 6;
  inline bool has_group_mail_config_id() const;
  inline void clear_group_mail_config_id();
  static const int kGroupMailConfigIdFieldNumber = 6;
  inline ::google::protobuf::int32 group_mail_config_id() const;
  inline void set_group_mail_config_id(::google::protobuf::int32 value);

  // optional uint64 family_mail_family_id = 7;
  inline bool has_family_mail_family_id() const;
  inline void clear_family_mail_family_id();
  static const int kFamilyMailFamilyIdFieldNumber = 7;
  inline ::google::protobuf::uint64 family_mail_family_id() const;
  inline void set_family_mail_family_id(::google::protobuf::uint64 value);

  // optional int32 family_mail_config_id = 8;
  inline bool has_family_mail_config_id() const;
  inline void clear_family_mail_config_id();
  static const int kFamilyMailConfigIdFieldNumber = 8;
  inline ::google::protobuf::int32 family_mail_config_id() const;
  inline void set_family_mail_config_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_send_all_type_mail_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_to_role_name();
  inline void clear_has_to_role_name();
  inline void set_has_game_session_back();
  inline void clear_has_game_session_back();
  inline void set_has_global_mail_config_id();
  inline void clear_has_global_mail_config_id();
  inline void set_has_group_mail_config_id();
  inline void clear_has_group_mail_config_id();
  inline void set_has_family_mail_family_id();
  inline void clear_has_family_mail_family_id();
  inline void set_has_family_mail_config_id();
  inline void clear_has_family_mail_config_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance > private_mails_;
  ::std::string* to_role_name_;
  int protoid_;
  ::google::protobuf::int32 global_mail_config_id_;
  ::google::protobuf::uint64 game_session_back_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > group_mail_to_role_ids_;
  ::google::protobuf::uint64 family_mail_family_id_;
  ::google::protobuf::int32 group_mail_config_id_;
  ::google::protobuf::int32 family_mail_config_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_send_all_type_mail_req* default_instance_;
};
// -------------------------------------------------------------------

class mail_send_all_type_mail_ack : public ::google::protobuf::Message {
 public:
  mail_send_all_type_mail_ack();
  virtual ~mail_send_all_type_mail_ack();

  mail_send_all_type_mail_ack(const mail_send_all_type_mail_ack& from);

  inline mail_send_all_type_mail_ack& operator=(const mail_send_all_type_mail_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_send_all_type_mail_ack& default_instance();

  void Swap(mail_send_all_type_mail_ack* other);

  // implements Message ----------------------------------------------

  mail_send_all_type_mail_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_send_all_type_mail_ack& from);
  void MergeFrom(const mail_send_all_type_mail_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_send_all_type_mail_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // repeated int32 config_id = 2;
  inline int config_id_size() const;
  inline void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  inline ::google::protobuf::int32 config_id(int index) const;
  inline void set_config_id(int index, ::google::protobuf::int32 value);
  inline void add_config_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      config_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_config_id();

  // optional .SProtoSpace.MsgErrorType rec_code_private = 3;
  inline bool has_rec_code_private() const;
  inline void clear_rec_code_private();
  static const int kRecCodePrivateFieldNumber = 3;
  inline ::SProtoSpace::MsgErrorType rec_code_private() const;
  inline void set_rec_code_private(::SProtoSpace::MsgErrorType value);

  // optional .SProtoSpace.MsgErrorType rec_code_global = 4;
  inline bool has_rec_code_global() const;
  inline void clear_rec_code_global();
  static const int kRecCodeGlobalFieldNumber = 4;
  inline ::SProtoSpace::MsgErrorType rec_code_global() const;
  inline void set_rec_code_global(::SProtoSpace::MsgErrorType value);

  // optional .SProtoSpace.MsgErrorType rec_code_group = 5;
  inline bool has_rec_code_group() const;
  inline void clear_rec_code_group();
  static const int kRecCodeGroupFieldNumber = 5;
  inline ::SProtoSpace::MsgErrorType rec_code_group() const;
  inline void set_rec_code_group(::SProtoSpace::MsgErrorType value);

  // optional .SProtoSpace.MsgErrorType rec_code_family = 6;
  inline bool has_rec_code_family() const;
  inline void clear_rec_code_family();
  static const int kRecCodeFamilyFieldNumber = 6;
  inline ::SProtoSpace::MsgErrorType rec_code_family() const;
  inline void set_rec_code_family(::SProtoSpace::MsgErrorType value);

  // optional uint64 from_role_id = 7;
  inline bool has_from_role_id() const;
  inline void clear_from_role_id();
  static const int kFromRoleIdFieldNumber = 7;
  inline ::google::protobuf::uint64 from_role_id() const;
  inline void set_from_role_id(::google::protobuf::uint64 value);

  // repeated .SProtoSpace.mail_instance suceed_mails = 8;
  inline int suceed_mails_size() const;
  inline void clear_suceed_mails();
  static const int kSuceedMailsFieldNumber = 8;
  inline const ::SProtoSpace::mail_instance& suceed_mails(int index) const;
  inline ::SProtoSpace::mail_instance* mutable_suceed_mails(int index);
  inline ::SProtoSpace::mail_instance* add_suceed_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >&
      suceed_mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >*
      mutable_suceed_mails();

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_send_all_type_mail_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_rec_code_private();
  inline void clear_has_rec_code_private();
  inline void set_has_rec_code_global();
  inline void clear_has_rec_code_global();
  inline void set_has_rec_code_group();
  inline void clear_has_rec_code_group();
  inline void set_has_rec_code_family();
  inline void clear_has_rec_code_family();
  inline void set_has_from_role_id();
  inline void clear_has_from_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > config_id_;
  int protoid_;
  int rec_code_private_;
  int rec_code_global_;
  int rec_code_group_;
  ::google::protobuf::uint64 from_role_id_;
  ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance > suceed_mails_;
  int rec_code_family_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_send_all_type_mail_ack* default_instance_;
};
// -------------------------------------------------------------------

class mail_get_game_all_role_ids_req : public ::google::protobuf::Message {
 public:
  mail_get_game_all_role_ids_req();
  virtual ~mail_get_game_all_role_ids_req();

  mail_get_game_all_role_ids_req(const mail_get_game_all_role_ids_req& from);

  inline mail_get_game_all_role_ids_req& operator=(const mail_get_game_all_role_ids_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_get_game_all_role_ids_req& default_instance();

  void Swap(mail_get_game_all_role_ids_req* other);

  // implements Message ----------------------------------------------

  mail_get_game_all_role_ids_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_get_game_all_role_ids_req& from);
  void MergeFrom(const mail_get_game_all_role_ids_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_get_game_all_role_ids_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 mail_template_id = 2;
  inline bool has_mail_template_id() const;
  inline void clear_mail_template_id();
  static const int kMailTemplateIdFieldNumber = 2;
  inline ::google::protobuf::uint64 mail_template_id() const;
  inline void set_mail_template_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_get_game_all_role_ids_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_mail_template_id();
  inline void clear_has_mail_template_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mail_template_id_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_get_game_all_role_ids_req* default_instance_;
};
// -------------------------------------------------------------------

class mail_get_game_all_role_ids_ack : public ::google::protobuf::Message {
 public:
  mail_get_game_all_role_ids_ack();
  virtual ~mail_get_game_all_role_ids_ack();

  mail_get_game_all_role_ids_ack(const mail_get_game_all_role_ids_ack& from);

  inline mail_get_game_all_role_ids_ack& operator=(const mail_get_game_all_role_ids_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_get_game_all_role_ids_ack& default_instance();

  void Swap(mail_get_game_all_role_ids_ack* other);

  // implements Message ----------------------------------------------

  mail_get_game_all_role_ids_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_get_game_all_role_ids_ack& from);
  void MergeFrom(const mail_get_game_all_role_ids_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_get_game_all_role_ids_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // repeated uint64 role_ids = 2;
  inline int role_ids_size() const;
  inline void clear_role_ids();
  static const int kRoleIdsFieldNumber = 2;
  inline ::google::protobuf::uint64 role_ids(int index) const;
  inline void set_role_ids(int index, ::google::protobuf::uint64 value);
  inline void add_role_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      role_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_role_ids();

  // optional uint64 mail_template_id = 3;
  inline bool has_mail_template_id() const;
  inline void clear_mail_template_id();
  static const int kMailTemplateIdFieldNumber = 3;
  inline ::google::protobuf::uint64 mail_template_id() const;
  inline void set_mail_template_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_get_game_all_role_ids_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_mail_template_id();
  inline void clear_has_mail_template_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > role_ids_;
  ::google::protobuf::uint64 mail_template_id_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_get_game_all_role_ids_ack* default_instance_;
};
// -------------------------------------------------------------------

class mail_svr_pressure_ntf : public ::google::protobuf::Message {
 public:
  mail_svr_pressure_ntf();
  virtual ~mail_svr_pressure_ntf();

  mail_svr_pressure_ntf(const mail_svr_pressure_ntf& from);

  inline mail_svr_pressure_ntf& operator=(const mail_svr_pressure_ntf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_svr_pressure_ntf& default_instance();

  void Swap(mail_svr_pressure_ntf* other);

  // implements Message ----------------------------------------------

  mail_svr_pressure_ntf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_svr_pressure_ntf& from);
  void MergeFrom(const mail_svr_pressure_ntf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_svr_pressure_ntf_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 sql_pre_count = 2;
  inline bool has_sql_pre_count() const;
  inline void clear_sql_pre_count();
  static const int kSqlPreCountFieldNumber = 2;
  inline ::google::protobuf::uint64 sql_pre_count() const;
  inline void set_sql_pre_count(::google::protobuf::uint64 value);

  // optional uint64 sql_run_count = 3;
  inline bool has_sql_run_count() const;
  inline void clear_sql_run_count();
  static const int kSqlRunCountFieldNumber = 3;
  inline ::google::protobuf::uint64 sql_run_count() const;
  inline void set_sql_run_count(::google::protobuf::uint64 value);

  // optional int32 game_count = 4;
  inline bool has_game_count() const;
  inline void clear_game_count();
  static const int kGameCountFieldNumber = 4;
  inline ::google::protobuf::int32 game_count() const;
  inline void set_game_count(::google::protobuf::int32 value);

  // optional int32 mail_count = 5;
  inline bool has_mail_count() const;
  inline void clear_mail_count();
  static const int kMailCountFieldNumber = 5;
  inline ::google::protobuf::int32 mail_count() const;
  inline void set_mail_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_svr_pressure_ntf)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_sql_pre_count();
  inline void clear_has_sql_pre_count();
  inline void set_has_sql_run_count();
  inline void clear_has_sql_run_count();
  inline void set_has_game_count();
  inline void clear_has_game_count();
  inline void set_has_mail_count();
  inline void clear_has_mail_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sql_pre_count_;
  int protoid_;
  ::google::protobuf::int32 game_count_;
  ::google::protobuf::uint64 sql_run_count_;
  ::google::protobuf::int32 mail_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_svr_pressure_ntf* default_instance_;
};
// -------------------------------------------------------------------

class del_ss_mul_mails_req : public ::google::protobuf::Message {
 public:
  del_ss_mul_mails_req();
  virtual ~del_ss_mul_mails_req();

  del_ss_mul_mails_req(const del_ss_mul_mails_req& from);

  inline del_ss_mul_mails_req& operator=(const del_ss_mul_mails_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const del_ss_mul_mails_req& default_instance();

  void Swap(del_ss_mul_mails_req* other);

  // implements Message ----------------------------------------------

  del_ss_mul_mails_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const del_ss_mul_mails_req& from);
  void MergeFrom(const del_ss_mul_mails_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = del_ss_mul_mails_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // repeated uint64 mail_id_s = 2;
  inline int mail_id_s_size() const;
  inline void clear_mail_id_s();
  static const int kMailIdSFieldNumber = 2;
  inline ::google::protobuf::uint64 mail_id_s(int index) const;
  inline void set_mail_id_s(int index, ::google::protobuf::uint64 value);
  inline void add_mail_id_s(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mail_id_s() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mail_id_s();

  // optional uint64 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 game_id = 4;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // optional bool server_side_opt = 5;
  inline bool has_server_side_opt() const;
  inline void clear_server_side_opt();
  static const int kServerSideOptFieldNumber = 5;
  inline bool server_side_opt() const;
  inline void set_server_side_opt(bool value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.del_ss_mul_mails_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_server_side_opt();
  inline void clear_has_server_side_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mail_id_s_;
  ::google::protobuf::uint64 role_id_;
  int protoid_;
  bool server_side_opt_;
  ::google::protobuf::uint64 game_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static del_ss_mul_mails_req* default_instance_;
};
// -------------------------------------------------------------------

class del_ss_mul_mails_ack : public ::google::protobuf::Message {
 public:
  del_ss_mul_mails_ack();
  virtual ~del_ss_mul_mails_ack();

  del_ss_mul_mails_ack(const del_ss_mul_mails_ack& from);

  inline del_ss_mul_mails_ack& operator=(const del_ss_mul_mails_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const del_ss_mul_mails_ack& default_instance();

  void Swap(del_ss_mul_mails_ack* other);

  // implements Message ----------------------------------------------

  del_ss_mul_mails_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const del_ss_mul_mails_ack& from);
  void MergeFrom(const del_ss_mul_mails_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = del_ss_mul_mails_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // repeated uint64 mail_id_s = 2;
  inline int mail_id_s_size() const;
  inline void clear_mail_id_s();
  static const int kMailIdSFieldNumber = 2;
  inline ::google::protobuf::uint64 mail_id_s(int index) const;
  inline void set_mail_id_s(int index, ::google::protobuf::uint64 value);
  inline void add_mail_id_s(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mail_id_s() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mail_id_s();

  // optional uint64 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional .SProtoSpace.MsgErrorType error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::SProtoSpace::MsgErrorType error() const;
  inline void set_error(::SProtoSpace::MsgErrorType value);

  // optional bool server_side_opt = 5;
  inline bool has_server_side_opt() const;
  inline void clear_server_side_opt();
  static const int kServerSideOptFieldNumber = 5;
  inline bool server_side_opt() const;
  inline void set_server_side_opt(bool value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.del_ss_mul_mails_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_server_side_opt();
  inline void clear_has_server_side_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mail_id_s_;
  int protoid_;
  int error_;
  ::google::protobuf::uint64 role_id_;
  bool server_side_opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static del_ss_mul_mails_ack* default_instance_;
};
// -------------------------------------------------------------------

class sync_ss_mul_mails_state_req : public ::google::protobuf::Message {
 public:
  sync_ss_mul_mails_state_req();
  virtual ~sync_ss_mul_mails_state_req();

  sync_ss_mul_mails_state_req(const sync_ss_mul_mails_state_req& from);

  inline sync_ss_mul_mails_state_req& operator=(const sync_ss_mul_mails_state_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sync_ss_mul_mails_state_req& default_instance();

  void Swap(sync_ss_mul_mails_state_req* other);

  // implements Message ----------------------------------------------

  sync_ss_mul_mails_state_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sync_ss_mul_mails_state_req& from);
  void MergeFrom(const sync_ss_mul_mails_state_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = sync_ss_mul_mails_state_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // repeated uint64 mail_id_s = 2;
  inline int mail_id_s_size() const;
  inline void clear_mail_id_s();
  static const int kMailIdSFieldNumber = 2;
  inline ::google::protobuf::uint64 mail_id_s(int index) const;
  inline void set_mail_id_s(int index, ::google::protobuf::uint64 value);
  inline void add_mail_id_s(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mail_id_s() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mail_id_s();

  // optional uint64 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 game_id = 4;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // optional bool read_state = 5;
  inline bool has_read_state() const;
  inline void clear_read_state();
  static const int kReadStateFieldNumber = 5;
  inline bool read_state() const;
  inline void set_read_state(bool value);

  // optional bool get_attach_state = 6;
  inline bool has_get_attach_state() const;
  inline void clear_get_attach_state();
  static const int kGetAttachStateFieldNumber = 6;
  inline bool get_attach_state() const;
  inline void set_get_attach_state(bool value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.sync_ss_mul_mails_state_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_read_state();
  inline void clear_has_read_state();
  inline void set_has_get_attach_state();
  inline void clear_has_get_attach_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mail_id_s_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 game_id_;
  int protoid_;
  bool read_state_;
  bool get_attach_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static sync_ss_mul_mails_state_req* default_instance_;
};
// -------------------------------------------------------------------

class sync_ss_mul_mails_state_ack : public ::google::protobuf::Message {
 public:
  sync_ss_mul_mails_state_ack();
  virtual ~sync_ss_mul_mails_state_ack();

  sync_ss_mul_mails_state_ack(const sync_ss_mul_mails_state_ack& from);

  inline sync_ss_mul_mails_state_ack& operator=(const sync_ss_mul_mails_state_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sync_ss_mul_mails_state_ack& default_instance();

  void Swap(sync_ss_mul_mails_state_ack* other);

  // implements Message ----------------------------------------------

  sync_ss_mul_mails_state_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sync_ss_mul_mails_state_ack& from);
  void MergeFrom(const sync_ss_mul_mails_state_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = sync_ss_mul_mails_state_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // repeated uint64 mail_id_s = 2;
  inline int mail_id_s_size() const;
  inline void clear_mail_id_s();
  static const int kMailIdSFieldNumber = 2;
  inline ::google::protobuf::uint64 mail_id_s(int index) const;
  inline void set_mail_id_s(int index, ::google::protobuf::uint64 value);
  inline void add_mail_id_s(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mail_id_s() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mail_id_s();

  // optional uint64 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional .SProtoSpace.MsgErrorType error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::SProtoSpace::MsgErrorType error() const;
  inline void set_error(::SProtoSpace::MsgErrorType value);

  // optional bool read_state = 5;
  inline bool has_read_state() const;
  inline void clear_read_state();
  static const int kReadStateFieldNumber = 5;
  inline bool read_state() const;
  inline void set_read_state(bool value);

  // optional bool get_attach_state = 6;
  inline bool has_get_attach_state() const;
  inline void clear_get_attach_state();
  static const int kGetAttachStateFieldNumber = 6;
  inline bool get_attach_state() const;
  inline void set_get_attach_state(bool value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.sync_ss_mul_mails_state_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_read_state();
  inline void clear_has_read_state();
  inline void set_has_get_attach_state();
  inline void clear_has_get_attach_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mail_id_s_;
  int protoid_;
  int error_;
  ::google::protobuf::uint64 role_id_;
  bool read_state_;
  bool get_attach_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static sync_ss_mul_mails_state_ack* default_instance_;
};
// -------------------------------------------------------------------

class get_mails_ss_req : public ::google::protobuf::Message {
 public:
  get_mails_ss_req();
  virtual ~get_mails_ss_req();

  get_mails_ss_req(const get_mails_ss_req& from);

  inline get_mails_ss_req& operator=(const get_mails_ss_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_mails_ss_req& default_instance();

  void Swap(get_mails_ss_req* other);

  // implements Message ----------------------------------------------

  get_mails_ss_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_mails_ss_req& from);
  void MergeFrom(const get_mails_ss_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = get_mails_ss_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // optional uint64 game_id = 4;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.get_mails_ss_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_game_id();
  inline void clear_has_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 game_id_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static get_mails_ss_req* default_instance_;
};
// -------------------------------------------------------------------

class get_mails_ss_ack : public ::google::protobuf::Message {
 public:
  get_mails_ss_ack();
  virtual ~get_mails_ss_ack();

  get_mails_ss_ack(const get_mails_ss_ack& from);

  inline get_mails_ss_ack& operator=(const get_mails_ss_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_mails_ss_ack& default_instance();

  void Swap(get_mails_ss_ack* other);

  // implements Message ----------------------------------------------

  get_mails_ss_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_mails_ss_ack& from);
  void MergeFrom(const get_mails_ss_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = get_mails_ss_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.get_mails_ss_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 time_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static get_mails_ss_ack* default_instance_;
};
// -------------------------------------------------------------------

class gen_mails_ss_req : public ::google::protobuf::Message {
 public:
  gen_mails_ss_req();
  virtual ~gen_mails_ss_req();

  gen_mails_ss_req(const gen_mails_ss_req& from);

  inline gen_mails_ss_req& operator=(const gen_mails_ss_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gen_mails_ss_req& default_instance();

  void Swap(gen_mails_ss_req* other);

  // implements Message ----------------------------------------------

  gen_mails_ss_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gen_mails_ss_req& from);
  void MergeFrom(const gen_mails_ss_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = gen_mails_ss_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // optional uint64 game_id = 4;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // optional uint64 max_id = 5;
  inline bool has_max_id() const;
  inline void clear_max_id();
  static const int kMaxIdFieldNumber = 5;
  inline ::google::protobuf::uint64 max_id() const;
  inline void set_max_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.gen_mails_ss_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_max_id();
  inline void clear_has_max_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 game_id_;
  ::google::protobuf::uint64 max_id_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static gen_mails_ss_req* default_instance_;
};
// -------------------------------------------------------------------

class gen_mails_ss_ack : public ::google::protobuf::Message {
 public:
  gen_mails_ss_ack();
  virtual ~gen_mails_ss_ack();

  gen_mails_ss_ack(const gen_mails_ss_ack& from);

  inline gen_mails_ss_ack& operator=(const gen_mails_ss_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gen_mails_ss_ack& default_instance();

  void Swap(gen_mails_ss_ack* other);

  // implements Message ----------------------------------------------

  gen_mails_ss_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gen_mails_ss_ack& from);
  void MergeFrom(const gen_mails_ss_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = gen_mails_ss_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // repeated .SProtoSpace.mail mails = 2;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 2;
  inline const ::SProtoSpace::mail& mails(int index) const;
  inline ::SProtoSpace::mail* mutable_mails(int index);
  inline ::SProtoSpace::mail* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail >*
      mutable_mails();

  // optional uint64 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.gen_mails_ss_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail > mails_;
  ::google::protobuf::uint64 role_id_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static gen_mails_ss_ack* default_instance_;
};
// -------------------------------------------------------------------

class send_mail_ss_req : public ::google::protobuf::Message {
 public:
  send_mail_ss_req();
  virtual ~send_mail_ss_req();

  send_mail_ss_req(const send_mail_ss_req& from);

  inline send_mail_ss_req& operator=(const send_mail_ss_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const send_mail_ss_req& default_instance();

  void Swap(send_mail_ss_req* other);

  // implements Message ----------------------------------------------

  send_mail_ss_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const send_mail_ss_req& from);
  void MergeFrom(const send_mail_ss_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = send_mail_ss_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional .SProtoSpace.mail mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::SProtoSpace::mail& mail() const;
  inline ::SProtoSpace::mail* mutable_mail();
  inline ::SProtoSpace::mail* release_mail();
  inline void set_allocated_mail(::SProtoSpace::mail* mail);

  // optional uint64 game_id = 3;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // optional uint64 to_role_id = 4;
  inline bool has_to_role_id() const;
  inline void clear_to_role_id();
  static const int kToRoleIdFieldNumber = 4;
  inline ::google::protobuf::uint64 to_role_id() const;
  inline void set_to_role_id(::google::protobuf::uint64 value);

  // optional string to_role_name = 5;
  inline bool has_to_role_name() const;
  inline void clear_to_role_name();
  static const int kToRoleNameFieldNumber = 5;
  inline const ::std::string& to_role_name() const;
  inline void set_to_role_name(const ::std::string& value);
  inline void set_to_role_name(const char* value);
  inline void set_to_role_name(const char* value, size_t size);
  inline ::std::string* mutable_to_role_name();
  inline ::std::string* release_to_role_name();
  inline void set_allocated_to_role_name(::std::string* to_role_name);

  // optional .SProtoSpace.eSendMailType type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::SProtoSpace::eSendMailType type() const;
  inline void set_type(::SProtoSpace::eSendMailType value);

  // optional bool send_back = 7;
  inline bool has_send_back() const;
  inline void clear_send_back();
  static const int kSendBackFieldNumber = 7;
  inline bool send_back() const;
  inline void set_send_back(bool value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.send_mail_ss_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_mail();
  inline void clear_has_mail();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_to_role_id();
  inline void clear_has_to_role_id();
  inline void set_has_to_role_name();
  inline void clear_has_to_role_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_send_back();
  inline void clear_has_send_back();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SProtoSpace::mail* mail_;
  ::google::protobuf::uint64 game_id_;
  int protoid_;
  int type_;
  ::google::protobuf::uint64 to_role_id_;
  ::std::string* to_role_name_;
  bool send_back_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static send_mail_ss_req* default_instance_;
};
// -------------------------------------------------------------------

class send_mail_ss_ack : public ::google::protobuf::Message {
 public:
  send_mail_ss_ack();
  virtual ~send_mail_ss_ack();

  send_mail_ss_ack(const send_mail_ss_ack& from);

  inline send_mail_ss_ack& operator=(const send_mail_ss_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const send_mail_ss_ack& default_instance();

  void Swap(send_mail_ss_ack* other);

  // implements Message ----------------------------------------------

  send_mail_ss_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const send_mail_ss_ack& from);
  void MergeFrom(const send_mail_ss_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = send_mail_ss_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional .SProtoSpace.mail mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::SProtoSpace::mail& mail() const;
  inline ::SProtoSpace::mail* mutable_mail();
  inline ::SProtoSpace::mail* release_mail();
  inline void set_allocated_mail(::SProtoSpace::mail* mail);

  // optional uint64 game_id = 3;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // optional .SProtoSpace.MsgErrorType error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::SProtoSpace::MsgErrorType error() const;
  inline void set_error(::SProtoSpace::MsgErrorType value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.send_mail_ss_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_mail();
  inline void clear_has_mail();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SProtoSpace::mail* mail_;
  int protoid_;
  int error_;
  ::google::protobuf::uint64 game_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static send_mail_ss_ack* default_instance_;
};
// -------------------------------------------------------------------

class recv_mail_ss_ntf : public ::google::protobuf::Message {
 public:
  recv_mail_ss_ntf();
  virtual ~recv_mail_ss_ntf();

  recv_mail_ss_ntf(const recv_mail_ss_ntf& from);

  inline recv_mail_ss_ntf& operator=(const recv_mail_ss_ntf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const recv_mail_ss_ntf& default_instance();

  void Swap(recv_mail_ss_ntf* other);

  // implements Message ----------------------------------------------

  recv_mail_ss_ntf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const recv_mail_ss_ntf& from);
  void MergeFrom(const recv_mail_ss_ntf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = recv_mail_ss_ntf_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional .SProtoSpace.mail mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::SProtoSpace::mail& mail() const;
  inline ::SProtoSpace::mail* mutable_mail();
  inline ::SProtoSpace::mail* release_mail();
  inline void set_allocated_mail(::SProtoSpace::mail* mail);

  // optional uint64 game_id = 3;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // optional .SProtoSpace.MsgErrorType error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::SProtoSpace::MsgErrorType error() const;
  inline void set_error(::SProtoSpace::MsgErrorType value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.recv_mail_ss_ntf)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_mail();
  inline void clear_has_mail();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SProtoSpace::mail* mail_;
  int protoid_;
  int error_;
  ::google::protobuf::uint64 game_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static recv_mail_ss_ntf* default_instance_;
};
// -------------------------------------------------------------------

class mail_add_template_ss_req : public ::google::protobuf::Message {
 public:
  mail_add_template_ss_req();
  virtual ~mail_add_template_ss_req();

  mail_add_template_ss_req(const mail_add_template_ss_req& from);

  inline mail_add_template_ss_req& operator=(const mail_add_template_ss_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_add_template_ss_req& default_instance();

  void Swap(mail_add_template_ss_req* other);

  // implements Message ----------------------------------------------

  mail_add_template_ss_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_add_template_ss_req& from);
  void MergeFrom(const mail_add_template_ss_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_add_template_ss_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional .SProtoSpace.eMailAddTemplateType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::SProtoSpace::eMailAddTemplateType type() const;
  inline void set_type(::SProtoSpace::eMailAddTemplateType value);

  // optional .SProtoSpace.mail_template template = 3;
  inline bool has_template_() const;
  inline void clear_template_();
  static const int kTemplateFieldNumber = 3;
  inline const ::SProtoSpace::mail_template& template_() const;
  inline ::SProtoSpace::mail_template* mutable_template_();
  inline ::SProtoSpace::mail_template* release_template_();
  inline void set_allocated_template_(::SProtoSpace::mail_template* template_);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_add_template_ss_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_template_();
  inline void clear_has_template_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int protoid_;
  int type_;
  ::SProtoSpace::mail_template* template__;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_add_template_ss_req* default_instance_;
};
// -------------------------------------------------------------------

class mail_add_template_ss_ack : public ::google::protobuf::Message {
 public:
  mail_add_template_ss_ack();
  virtual ~mail_add_template_ss_ack();

  mail_add_template_ss_ack(const mail_add_template_ss_ack& from);

  inline mail_add_template_ss_ack& operator=(const mail_add_template_ss_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_add_template_ss_ack& default_instance();

  void Swap(mail_add_template_ss_ack* other);

  // implements Message ----------------------------------------------

  mail_add_template_ss_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_add_template_ss_ack& from);
  void MergeFrom(const mail_add_template_ss_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_add_template_ss_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional .SProtoSpace.eMailAddTemplateType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::SProtoSpace::eMailAddTemplateType type() const;
  inline void set_type(::SProtoSpace::eMailAddTemplateType value);

  // optional .SProtoSpace.mail_template template = 3;
  inline bool has_template_() const;
  inline void clear_template_();
  static const int kTemplateFieldNumber = 3;
  inline const ::SProtoSpace::mail_template& template_() const;
  inline ::SProtoSpace::mail_template* mutable_template_();
  inline ::SProtoSpace::mail_template* release_template_();
  inline void set_allocated_template_(::SProtoSpace::mail_template* template_);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_add_template_ss_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_template_();
  inline void clear_has_template_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int protoid_;
  int type_;
  ::SProtoSpace::mail_template* template__;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_add_template_ss_ack* default_instance_;
};
// -------------------------------------------------------------------

class mail_add_template_ss_ntf : public ::google::protobuf::Message {
 public:
  mail_add_template_ss_ntf();
  virtual ~mail_add_template_ss_ntf();

  mail_add_template_ss_ntf(const mail_add_template_ss_ntf& from);

  inline mail_add_template_ss_ntf& operator=(const mail_add_template_ss_ntf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_add_template_ss_ntf& default_instance();

  void Swap(mail_add_template_ss_ntf* other);

  // implements Message ----------------------------------------------

  mail_add_template_ss_ntf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_add_template_ss_ntf& from);
  void MergeFrom(const mail_add_template_ss_ntf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_add_template_ss_ntf_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional .SProtoSpace.eMailAddTemplateType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::SProtoSpace::eMailAddTemplateType type() const;
  inline void set_type(::SProtoSpace::eMailAddTemplateType value);

  // optional .SProtoSpace.mail_template template = 3;
  inline bool has_template_() const;
  inline void clear_template_();
  static const int kTemplateFieldNumber = 3;
  inline const ::SProtoSpace::mail_template& template_() const;
  inline ::SProtoSpace::mail_template* mutable_template_();
  inline ::SProtoSpace::mail_template* release_template_();
  inline void set_allocated_template_(::SProtoSpace::mail_template* template_);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_add_template_ss_ntf)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_template_();
  inline void clear_has_template_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int protoid_;
  int type_;
  ::SProtoSpace::mail_template* template__;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_add_template_ss_ntf* default_instance_;
};
// -------------------------------------------------------------------

class mail_new_template_ss_ntf : public ::google::protobuf::Message {
 public:
  mail_new_template_ss_ntf();
  virtual ~mail_new_template_ss_ntf();

  mail_new_template_ss_ntf(const mail_new_template_ss_ntf& from);

  inline mail_new_template_ss_ntf& operator=(const mail_new_template_ss_ntf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_new_template_ss_ntf& default_instance();

  void Swap(mail_new_template_ss_ntf* other);

  // implements Message ----------------------------------------------

  mail_new_template_ss_ntf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_new_template_ss_ntf& from);
  void MergeFrom(const mail_new_template_ss_ntf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_new_template_ss_ntf_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_new_template_ss_ntf)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_new_template_ss_ntf* default_instance_;
};
// -------------------------------------------------------------------

class mail_red_pt_ss_req : public ::google::protobuf::Message {
 public:
  mail_red_pt_ss_req();
  virtual ~mail_red_pt_ss_req();

  mail_red_pt_ss_req(const mail_red_pt_ss_req& from);

  inline mail_red_pt_ss_req& operator=(const mail_red_pt_ss_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_red_pt_ss_req& default_instance();

  void Swap(mail_red_pt_ss_req* other);

  // implements Message ----------------------------------------------

  mail_red_pt_ss_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_red_pt_ss_req& from);
  void MergeFrom(const mail_red_pt_ss_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_red_pt_ss_req_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 game_id = 3;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // optional uint64 mail_g_template = 4;
  inline bool has_mail_g_template() const;
  inline void clear_mail_g_template();
  static const int kMailGTemplateFieldNumber = 4;
  inline ::google::protobuf::uint64 mail_g_template() const;
  inline void set_mail_g_template(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_red_pt_ss_req)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_mail_g_template();
  inline void clear_has_mail_g_template();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 game_id_;
  ::google::protobuf::uint64 mail_g_template_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_red_pt_ss_req* default_instance_;
};
// -------------------------------------------------------------------

class mail_red_pt_ss_ack : public ::google::protobuf::Message {
 public:
  mail_red_pt_ss_ack();
  virtual ~mail_red_pt_ss_ack();

  mail_red_pt_ss_ack(const mail_red_pt_ss_ack& from);

  inline mail_red_pt_ss_ack& operator=(const mail_red_pt_ss_ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_red_pt_ss_ack& default_instance();

  void Swap(mail_red_pt_ss_ack* other);

  // implements Message ----------------------------------------------

  mail_red_pt_ss_ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_red_pt_ss_ack& from);
  void MergeFrom(const mail_red_pt_ss_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_red_pt_ss_ack_id];
  inline bool has_protoid() const;
  inline void clear_protoid();
  static const int kProtoidFieldNumber = 1;
  inline ::SProtoSpace::ESSProtoID protoid() const;
  inline void set_protoid(::SProtoSpace::ESSProtoID value);

  // optional uint64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SProtoSpace.mail_red_pt_ss_ack)
 private:
  inline void set_has_protoid();
  inline void clear_has_protoid();
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 role_id_;
  int protoid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmail_2eproto();
  friend void protobuf_AssignDesc_ss_5fmail_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmail_2eproto();

  void InitAsDefaultInstance();
  static mail_red_pt_ss_ack* default_instance_;
};
// ===================================================================


// ===================================================================

// mail_role_enter_game_get_mail_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_enter_game_get_mail_req_id];
inline bool mail_role_enter_game_get_mail_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_role_enter_game_get_mail_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_role_enter_game_get_mail_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_role_enter_game_get_mail_req::clear_protoid() {
  protoid_ = 317;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_role_enter_game_get_mail_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_role_enter_game_get_mail_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool mail_role_enter_game_get_mail_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_role_enter_game_get_mail_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_role_enter_game_get_mail_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_role_enter_game_get_mail_req::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 mail_role_enter_game_get_mail_req::role_id() const {
  return role_id_;
}
inline void mail_role_enter_game_get_mail_req::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint64 role_mail_time_point = 3;
inline bool mail_role_enter_game_get_mail_req::has_role_mail_time_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_role_enter_game_get_mail_req::set_has_role_mail_time_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_role_enter_game_get_mail_req::clear_has_role_mail_time_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_role_enter_game_get_mail_req::clear_role_mail_time_point() {
  role_mail_time_point_ = GOOGLE_ULONGLONG(0);
  clear_has_role_mail_time_point();
}
inline ::google::protobuf::uint64 mail_role_enter_game_get_mail_req::role_mail_time_point() const {
  return role_mail_time_point_;
}
inline void mail_role_enter_game_get_mail_req::set_role_mail_time_point(::google::protobuf::uint64 value) {
  set_has_role_mail_time_point();
  role_mail_time_point_ = value;
}

// -------------------------------------------------------------------

// mail_role_enter_game_get_mail_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_enter_game_get_mail_ack_id];
inline bool mail_role_enter_game_get_mail_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_role_enter_game_get_mail_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_role_enter_game_get_mail_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_role_enter_game_get_mail_ack::clear_protoid() {
  protoid_ = 318;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_role_enter_game_get_mail_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_role_enter_game_get_mail_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool mail_role_enter_game_get_mail_ack::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_role_enter_game_get_mail_ack::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_role_enter_game_get_mail_ack::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_role_enter_game_get_mail_ack::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 mail_role_enter_game_get_mail_ack::role_id() const {
  return role_id_;
}
inline void mail_role_enter_game_get_mail_ack::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint64 role_mail_time_point = 3;
inline bool mail_role_enter_game_get_mail_ack::has_role_mail_time_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_role_enter_game_get_mail_ack::set_has_role_mail_time_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_role_enter_game_get_mail_ack::clear_has_role_mail_time_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_role_enter_game_get_mail_ack::clear_role_mail_time_point() {
  role_mail_time_point_ = GOOGLE_ULONGLONG(0);
  clear_has_role_mail_time_point();
}
inline ::google::protobuf::uint64 mail_role_enter_game_get_mail_ack::role_mail_time_point() const {
  return role_mail_time_point_;
}
inline void mail_role_enter_game_get_mail_ack::set_role_mail_time_point(::google::protobuf::uint64 value) {
  set_has_role_mail_time_point();
  role_mail_time_point_ = value;
}

// -------------------------------------------------------------------

// mail_one_role_mail_ntf

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_one_role_mail_ntf_id];
inline bool mail_one_role_mail_ntf::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_one_role_mail_ntf::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_one_role_mail_ntf::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_one_role_mail_ntf::clear_protoid() {
  protoid_ = 327;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_one_role_mail_ntf::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_one_role_mail_ntf::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool mail_one_role_mail_ntf::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_one_role_mail_ntf::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_one_role_mail_ntf::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_one_role_mail_ntf::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 mail_one_role_mail_ntf::role_id() const {
  return role_id_;
}
inline void mail_one_role_mail_ntf::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// repeated .SProtoSpace.mail_instance mails = 3;
inline int mail_one_role_mail_ntf::mails_size() const {
  return mails_.size();
}
inline void mail_one_role_mail_ntf::clear_mails() {
  mails_.Clear();
}
inline const ::SProtoSpace::mail_instance& mail_one_role_mail_ntf::mails(int index) const {
  return mails_.Get(index);
}
inline ::SProtoSpace::mail_instance* mail_one_role_mail_ntf::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::SProtoSpace::mail_instance* mail_one_role_mail_ntf::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >&
mail_one_role_mail_ntf::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >*
mail_one_role_mail_ntf::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// mail_multi_role_mail_ntf

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_multi_role_mail_ntf_id];
inline bool mail_multi_role_mail_ntf::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_multi_role_mail_ntf::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_multi_role_mail_ntf::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_multi_role_mail_ntf::clear_protoid() {
  protoid_ = 328;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_multi_role_mail_ntf::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_multi_role_mail_ntf::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// repeated .SProtoSpace.mail_instance mails = 2;
inline int mail_multi_role_mail_ntf::mails_size() const {
  return mails_.size();
}
inline void mail_multi_role_mail_ntf::clear_mails() {
  mails_.Clear();
}
inline const ::SProtoSpace::mail_instance& mail_multi_role_mail_ntf::mails(int index) const {
  return mails_.Get(index);
}
inline ::SProtoSpace::mail_instance* mail_multi_role_mail_ntf::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::SProtoSpace::mail_instance* mail_multi_role_mail_ntf::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >&
mail_multi_role_mail_ntf::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >*
mail_multi_role_mail_ntf::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// mail_role_set_multi_mail_status_ntf

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_set_multi_mail_status_ntf_id];
inline bool mail_role_set_multi_mail_status_ntf::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_role_set_multi_mail_status_ntf::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_role_set_multi_mail_status_ntf::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_role_set_multi_mail_status_ntf::clear_protoid() {
  protoid_ = 319;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_role_set_multi_mail_status_ntf::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_role_set_multi_mail_status_ntf::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool mail_role_set_multi_mail_status_ntf::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_role_set_multi_mail_status_ntf::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_role_set_multi_mail_status_ntf::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_role_set_multi_mail_status_ntf::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 mail_role_set_multi_mail_status_ntf::role_id() const {
  return role_id_;
}
inline void mail_role_set_multi_mail_status_ntf::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// repeated uint64 mail_ids = 3;
inline int mail_role_set_multi_mail_status_ntf::mail_ids_size() const {
  return mail_ids_.size();
}
inline void mail_role_set_multi_mail_status_ntf::clear_mail_ids() {
  mail_ids_.Clear();
}
inline ::google::protobuf::uint64 mail_role_set_multi_mail_status_ntf::mail_ids(int index) const {
  return mail_ids_.Get(index);
}
inline void mail_role_set_multi_mail_status_ntf::set_mail_ids(int index, ::google::protobuf::uint64 value) {
  mail_ids_.Set(index, value);
}
inline void mail_role_set_multi_mail_status_ntf::add_mail_ids(::google::protobuf::uint64 value) {
  mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
mail_role_set_multi_mail_status_ntf::mail_ids() const {
  return mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
mail_role_set_multi_mail_status_ntf::mutable_mail_ids() {
  return &mail_ids_;
}

// optional bool to_set_read = 4;
inline bool mail_role_set_multi_mail_status_ntf::has_to_set_read() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mail_role_set_multi_mail_status_ntf::set_has_to_set_read() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mail_role_set_multi_mail_status_ntf::clear_has_to_set_read() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mail_role_set_multi_mail_status_ntf::clear_to_set_read() {
  to_set_read_ = false;
  clear_has_to_set_read();
}
inline bool mail_role_set_multi_mail_status_ntf::to_set_read() const {
  return to_set_read_;
}
inline void mail_role_set_multi_mail_status_ntf::set_to_set_read(bool value) {
  set_has_to_set_read();
  to_set_read_ = value;
}

// optional bool to_set_attach_getted = 5;
inline bool mail_role_set_multi_mail_status_ntf::has_to_set_attach_getted() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mail_role_set_multi_mail_status_ntf::set_has_to_set_attach_getted() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mail_role_set_multi_mail_status_ntf::clear_has_to_set_attach_getted() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mail_role_set_multi_mail_status_ntf::clear_to_set_attach_getted() {
  to_set_attach_getted_ = false;
  clear_has_to_set_attach_getted();
}
inline bool mail_role_set_multi_mail_status_ntf::to_set_attach_getted() const {
  return to_set_attach_getted_;
}
inline void mail_role_set_multi_mail_status_ntf::set_to_set_attach_getted(bool value) {
  set_has_to_set_attach_getted();
  to_set_attach_getted_ = value;
}

// -------------------------------------------------------------------

// mail_role_del_multi_mail_ntf

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_del_multi_mail_ntf_id];
inline bool mail_role_del_multi_mail_ntf::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_role_del_multi_mail_ntf::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_role_del_multi_mail_ntf::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_role_del_multi_mail_ntf::clear_protoid() {
  protoid_ = 320;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_role_del_multi_mail_ntf::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_role_del_multi_mail_ntf::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool mail_role_del_multi_mail_ntf::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_role_del_multi_mail_ntf::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_role_del_multi_mail_ntf::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_role_del_multi_mail_ntf::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 mail_role_del_multi_mail_ntf::role_id() const {
  return role_id_;
}
inline void mail_role_del_multi_mail_ntf::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// repeated uint64 mail_ids = 3;
inline int mail_role_del_multi_mail_ntf::mail_ids_size() const {
  return mail_ids_.size();
}
inline void mail_role_del_multi_mail_ntf::clear_mail_ids() {
  mail_ids_.Clear();
}
inline ::google::protobuf::uint64 mail_role_del_multi_mail_ntf::mail_ids(int index) const {
  return mail_ids_.Get(index);
}
inline void mail_role_del_multi_mail_ntf::set_mail_ids(int index, ::google::protobuf::uint64 value) {
  mail_ids_.Set(index, value);
}
inline void mail_role_del_multi_mail_ntf::add_mail_ids(::google::protobuf::uint64 value) {
  mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
mail_role_del_multi_mail_ntf::mail_ids() const {
  return mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
mail_role_del_multi_mail_ntf::mutable_mail_ids() {
  return &mail_ids_;
}

// -------------------------------------------------------------------

// mail_role_del_multi_mail_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_del_multi_mail_req_id];
inline bool mail_role_del_multi_mail_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_role_del_multi_mail_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_role_del_multi_mail_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_role_del_multi_mail_req::clear_protoid() {
  protoid_ = 323;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_role_del_multi_mail_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_role_del_multi_mail_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool mail_role_del_multi_mail_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_role_del_multi_mail_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_role_del_multi_mail_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_role_del_multi_mail_req::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 mail_role_del_multi_mail_req::role_id() const {
  return role_id_;
}
inline void mail_role_del_multi_mail_req::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// repeated uint64 mail_ids = 3;
inline int mail_role_del_multi_mail_req::mail_ids_size() const {
  return mail_ids_.size();
}
inline void mail_role_del_multi_mail_req::clear_mail_ids() {
  mail_ids_.Clear();
}
inline ::google::protobuf::uint64 mail_role_del_multi_mail_req::mail_ids(int index) const {
  return mail_ids_.Get(index);
}
inline void mail_role_del_multi_mail_req::set_mail_ids(int index, ::google::protobuf::uint64 value) {
  mail_ids_.Set(index, value);
}
inline void mail_role_del_multi_mail_req::add_mail_ids(::google::protobuf::uint64 value) {
  mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
mail_role_del_multi_mail_req::mail_ids() const {
  return mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
mail_role_del_multi_mail_req::mutable_mail_ids() {
  return &mail_ids_;
}

// -------------------------------------------------------------------

// mail_role_del_multi_mail_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_role_del_multi_mail_ack_id];
inline bool mail_role_del_multi_mail_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_role_del_multi_mail_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_role_del_multi_mail_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_role_del_multi_mail_ack::clear_protoid() {
  protoid_ = 324;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_role_del_multi_mail_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_role_del_multi_mail_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool mail_role_del_multi_mail_ack::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_role_del_multi_mail_ack::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_role_del_multi_mail_ack::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_role_del_multi_mail_ack::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 mail_role_del_multi_mail_ack::role_id() const {
  return role_id_;
}
inline void mail_role_del_multi_mail_ack::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// repeated uint64 suceed_mail_ids = 3;
inline int mail_role_del_multi_mail_ack::suceed_mail_ids_size() const {
  return suceed_mail_ids_.size();
}
inline void mail_role_del_multi_mail_ack::clear_suceed_mail_ids() {
  suceed_mail_ids_.Clear();
}
inline ::google::protobuf::uint64 mail_role_del_multi_mail_ack::suceed_mail_ids(int index) const {
  return suceed_mail_ids_.Get(index);
}
inline void mail_role_del_multi_mail_ack::set_suceed_mail_ids(int index, ::google::protobuf::uint64 value) {
  suceed_mail_ids_.Set(index, value);
}
inline void mail_role_del_multi_mail_ack::add_suceed_mail_ids(::google::protobuf::uint64 value) {
  suceed_mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
mail_role_del_multi_mail_ack::suceed_mail_ids() const {
  return suceed_mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
mail_role_del_multi_mail_ack::mutable_suceed_mail_ids() {
  return &suceed_mail_ids_;
}

// repeated uint64 failed_mail_ids = 4;
inline int mail_role_del_multi_mail_ack::failed_mail_ids_size() const {
  return failed_mail_ids_.size();
}
inline void mail_role_del_multi_mail_ack::clear_failed_mail_ids() {
  failed_mail_ids_.Clear();
}
inline ::google::protobuf::uint64 mail_role_del_multi_mail_ack::failed_mail_ids(int index) const {
  return failed_mail_ids_.Get(index);
}
inline void mail_role_del_multi_mail_ack::set_failed_mail_ids(int index, ::google::protobuf::uint64 value) {
  failed_mail_ids_.Set(index, value);
}
inline void mail_role_del_multi_mail_ack::add_failed_mail_ids(::google::protobuf::uint64 value) {
  failed_mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
mail_role_del_multi_mail_ack::failed_mail_ids() const {
  return failed_mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
mail_role_del_multi_mail_ack::mutable_failed_mail_ids() {
  return &failed_mail_ids_;
}

// -------------------------------------------------------------------

// mail_send_all_type_mail_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_send_all_type_mail_req_id];
inline bool mail_send_all_type_mail_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_send_all_type_mail_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_send_all_type_mail_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_send_all_type_mail_req::clear_protoid() {
  protoid_ = 321;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_send_all_type_mail_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_send_all_type_mail_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// repeated .SProtoSpace.mail_instance private_mails = 2;
inline int mail_send_all_type_mail_req::private_mails_size() const {
  return private_mails_.size();
}
inline void mail_send_all_type_mail_req::clear_private_mails() {
  private_mails_.Clear();
}
inline const ::SProtoSpace::mail_instance& mail_send_all_type_mail_req::private_mails(int index) const {
  return private_mails_.Get(index);
}
inline ::SProtoSpace::mail_instance* mail_send_all_type_mail_req::mutable_private_mails(int index) {
  return private_mails_.Mutable(index);
}
inline ::SProtoSpace::mail_instance* mail_send_all_type_mail_req::add_private_mails() {
  return private_mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >&
mail_send_all_type_mail_req::private_mails() const {
  return private_mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >*
mail_send_all_type_mail_req::mutable_private_mails() {
  return &private_mails_;
}

// optional string to_role_name = 3;
inline bool mail_send_all_type_mail_req::has_to_role_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_send_all_type_mail_req::set_has_to_role_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_send_all_type_mail_req::clear_has_to_role_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_send_all_type_mail_req::clear_to_role_name() {
  if (to_role_name_ != &::google::protobuf::internal::kEmptyString) {
    to_role_name_->clear();
  }
  clear_has_to_role_name();
}
inline const ::std::string& mail_send_all_type_mail_req::to_role_name() const {
  return *to_role_name_;
}
inline void mail_send_all_type_mail_req::set_to_role_name(const ::std::string& value) {
  set_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    to_role_name_ = new ::std::string;
  }
  to_role_name_->assign(value);
}
inline void mail_send_all_type_mail_req::set_to_role_name(const char* value) {
  set_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    to_role_name_ = new ::std::string;
  }
  to_role_name_->assign(value);
}
inline void mail_send_all_type_mail_req::set_to_role_name(const char* value, size_t size) {
  set_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    to_role_name_ = new ::std::string;
  }
  to_role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* mail_send_all_type_mail_req::mutable_to_role_name() {
  set_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    to_role_name_ = new ::std::string;
  }
  return to_role_name_;
}
inline ::std::string* mail_send_all_type_mail_req::release_to_role_name() {
  clear_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = to_role_name_;
    to_role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void mail_send_all_type_mail_req::set_allocated_to_role_name(::std::string* to_role_name) {
  if (to_role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete to_role_name_;
  }
  if (to_role_name) {
    set_has_to_role_name();
    to_role_name_ = to_role_name;
  } else {
    clear_has_to_role_name();
    to_role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 game_session_back = 9;
inline bool mail_send_all_type_mail_req::has_game_session_back() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mail_send_all_type_mail_req::set_has_game_session_back() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mail_send_all_type_mail_req::clear_has_game_session_back() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mail_send_all_type_mail_req::clear_game_session_back() {
  game_session_back_ = GOOGLE_ULONGLONG(0);
  clear_has_game_session_back();
}
inline ::google::protobuf::uint64 mail_send_all_type_mail_req::game_session_back() const {
  return game_session_back_;
}
inline void mail_send_all_type_mail_req::set_game_session_back(::google::protobuf::uint64 value) {
  set_has_game_session_back();
  game_session_back_ = value;
}

// optional int32 global_mail_config_id = 4;
inline bool mail_send_all_type_mail_req::has_global_mail_config_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mail_send_all_type_mail_req::set_has_global_mail_config_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mail_send_all_type_mail_req::clear_has_global_mail_config_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mail_send_all_type_mail_req::clear_global_mail_config_id() {
  global_mail_config_id_ = 0;
  clear_has_global_mail_config_id();
}
inline ::google::protobuf::int32 mail_send_all_type_mail_req::global_mail_config_id() const {
  return global_mail_config_id_;
}
inline void mail_send_all_type_mail_req::set_global_mail_config_id(::google::protobuf::int32 value) {
  set_has_global_mail_config_id();
  global_mail_config_id_ = value;
}

// repeated uint64 group_mail_to_role_ids = 5;
inline int mail_send_all_type_mail_req::group_mail_to_role_ids_size() const {
  return group_mail_to_role_ids_.size();
}
inline void mail_send_all_type_mail_req::clear_group_mail_to_role_ids() {
  group_mail_to_role_ids_.Clear();
}
inline ::google::protobuf::uint64 mail_send_all_type_mail_req::group_mail_to_role_ids(int index) const {
  return group_mail_to_role_ids_.Get(index);
}
inline void mail_send_all_type_mail_req::set_group_mail_to_role_ids(int index, ::google::protobuf::uint64 value) {
  group_mail_to_role_ids_.Set(index, value);
}
inline void mail_send_all_type_mail_req::add_group_mail_to_role_ids(::google::protobuf::uint64 value) {
  group_mail_to_role_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
mail_send_all_type_mail_req::group_mail_to_role_ids() const {
  return group_mail_to_role_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
mail_send_all_type_mail_req::mutable_group_mail_to_role_ids() {
  return &group_mail_to_role_ids_;
}

// optional int32 group_mail_config_id = 6;
inline bool mail_send_all_type_mail_req::has_group_mail_config_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mail_send_all_type_mail_req::set_has_group_mail_config_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mail_send_all_type_mail_req::clear_has_group_mail_config_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mail_send_all_type_mail_req::clear_group_mail_config_id() {
  group_mail_config_id_ = 0;
  clear_has_group_mail_config_id();
}
inline ::google::protobuf::int32 mail_send_all_type_mail_req::group_mail_config_id() const {
  return group_mail_config_id_;
}
inline void mail_send_all_type_mail_req::set_group_mail_config_id(::google::protobuf::int32 value) {
  set_has_group_mail_config_id();
  group_mail_config_id_ = value;
}

// optional uint64 family_mail_family_id = 7;
inline bool mail_send_all_type_mail_req::has_family_mail_family_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mail_send_all_type_mail_req::set_has_family_mail_family_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mail_send_all_type_mail_req::clear_has_family_mail_family_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mail_send_all_type_mail_req::clear_family_mail_family_id() {
  family_mail_family_id_ = GOOGLE_ULONGLONG(0);
  clear_has_family_mail_family_id();
}
inline ::google::protobuf::uint64 mail_send_all_type_mail_req::family_mail_family_id() const {
  return family_mail_family_id_;
}
inline void mail_send_all_type_mail_req::set_family_mail_family_id(::google::protobuf::uint64 value) {
  set_has_family_mail_family_id();
  family_mail_family_id_ = value;
}

// optional int32 family_mail_config_id = 8;
inline bool mail_send_all_type_mail_req::has_family_mail_config_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void mail_send_all_type_mail_req::set_has_family_mail_config_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void mail_send_all_type_mail_req::clear_has_family_mail_config_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void mail_send_all_type_mail_req::clear_family_mail_config_id() {
  family_mail_config_id_ = 0;
  clear_has_family_mail_config_id();
}
inline ::google::protobuf::int32 mail_send_all_type_mail_req::family_mail_config_id() const {
  return family_mail_config_id_;
}
inline void mail_send_all_type_mail_req::set_family_mail_config_id(::google::protobuf::int32 value) {
  set_has_family_mail_config_id();
  family_mail_config_id_ = value;
}

// -------------------------------------------------------------------

// mail_send_all_type_mail_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_send_all_type_mail_ack_id];
inline bool mail_send_all_type_mail_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_send_all_type_mail_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_send_all_type_mail_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_send_all_type_mail_ack::clear_protoid() {
  protoid_ = 322;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_send_all_type_mail_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_send_all_type_mail_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// repeated int32 config_id = 2;
inline int mail_send_all_type_mail_ack::config_id_size() const {
  return config_id_.size();
}
inline void mail_send_all_type_mail_ack::clear_config_id() {
  config_id_.Clear();
}
inline ::google::protobuf::int32 mail_send_all_type_mail_ack::config_id(int index) const {
  return config_id_.Get(index);
}
inline void mail_send_all_type_mail_ack::set_config_id(int index, ::google::protobuf::int32 value) {
  config_id_.Set(index, value);
}
inline void mail_send_all_type_mail_ack::add_config_id(::google::protobuf::int32 value) {
  config_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mail_send_all_type_mail_ack::config_id() const {
  return config_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mail_send_all_type_mail_ack::mutable_config_id() {
  return &config_id_;
}

// optional .SProtoSpace.MsgErrorType rec_code_private = 3;
inline bool mail_send_all_type_mail_ack::has_rec_code_private() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_send_all_type_mail_ack::set_has_rec_code_private() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_send_all_type_mail_ack::clear_has_rec_code_private() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_send_all_type_mail_ack::clear_rec_code_private() {
  rec_code_private_ = 0;
  clear_has_rec_code_private();
}
inline ::SProtoSpace::MsgErrorType mail_send_all_type_mail_ack::rec_code_private() const {
  return static_cast< ::SProtoSpace::MsgErrorType >(rec_code_private_);
}
inline void mail_send_all_type_mail_ack::set_rec_code_private(::SProtoSpace::MsgErrorType value) {
  assert(::SProtoSpace::MsgErrorType_IsValid(value));
  set_has_rec_code_private();
  rec_code_private_ = value;
}

// optional .SProtoSpace.MsgErrorType rec_code_global = 4;
inline bool mail_send_all_type_mail_ack::has_rec_code_global() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mail_send_all_type_mail_ack::set_has_rec_code_global() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mail_send_all_type_mail_ack::clear_has_rec_code_global() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mail_send_all_type_mail_ack::clear_rec_code_global() {
  rec_code_global_ = 0;
  clear_has_rec_code_global();
}
inline ::SProtoSpace::MsgErrorType mail_send_all_type_mail_ack::rec_code_global() const {
  return static_cast< ::SProtoSpace::MsgErrorType >(rec_code_global_);
}
inline void mail_send_all_type_mail_ack::set_rec_code_global(::SProtoSpace::MsgErrorType value) {
  assert(::SProtoSpace::MsgErrorType_IsValid(value));
  set_has_rec_code_global();
  rec_code_global_ = value;
}

// optional .SProtoSpace.MsgErrorType rec_code_group = 5;
inline bool mail_send_all_type_mail_ack::has_rec_code_group() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mail_send_all_type_mail_ack::set_has_rec_code_group() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mail_send_all_type_mail_ack::clear_has_rec_code_group() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mail_send_all_type_mail_ack::clear_rec_code_group() {
  rec_code_group_ = 0;
  clear_has_rec_code_group();
}
inline ::SProtoSpace::MsgErrorType mail_send_all_type_mail_ack::rec_code_group() const {
  return static_cast< ::SProtoSpace::MsgErrorType >(rec_code_group_);
}
inline void mail_send_all_type_mail_ack::set_rec_code_group(::SProtoSpace::MsgErrorType value) {
  assert(::SProtoSpace::MsgErrorType_IsValid(value));
  set_has_rec_code_group();
  rec_code_group_ = value;
}

// optional .SProtoSpace.MsgErrorType rec_code_family = 6;
inline bool mail_send_all_type_mail_ack::has_rec_code_family() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mail_send_all_type_mail_ack::set_has_rec_code_family() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mail_send_all_type_mail_ack::clear_has_rec_code_family() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mail_send_all_type_mail_ack::clear_rec_code_family() {
  rec_code_family_ = 0;
  clear_has_rec_code_family();
}
inline ::SProtoSpace::MsgErrorType mail_send_all_type_mail_ack::rec_code_family() const {
  return static_cast< ::SProtoSpace::MsgErrorType >(rec_code_family_);
}
inline void mail_send_all_type_mail_ack::set_rec_code_family(::SProtoSpace::MsgErrorType value) {
  assert(::SProtoSpace::MsgErrorType_IsValid(value));
  set_has_rec_code_family();
  rec_code_family_ = value;
}

// optional uint64 from_role_id = 7;
inline bool mail_send_all_type_mail_ack::has_from_role_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mail_send_all_type_mail_ack::set_has_from_role_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mail_send_all_type_mail_ack::clear_has_from_role_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mail_send_all_type_mail_ack::clear_from_role_id() {
  from_role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_role_id();
}
inline ::google::protobuf::uint64 mail_send_all_type_mail_ack::from_role_id() const {
  return from_role_id_;
}
inline void mail_send_all_type_mail_ack::set_from_role_id(::google::protobuf::uint64 value) {
  set_has_from_role_id();
  from_role_id_ = value;
}

// repeated .SProtoSpace.mail_instance suceed_mails = 8;
inline int mail_send_all_type_mail_ack::suceed_mails_size() const {
  return suceed_mails_.size();
}
inline void mail_send_all_type_mail_ack::clear_suceed_mails() {
  suceed_mails_.Clear();
}
inline const ::SProtoSpace::mail_instance& mail_send_all_type_mail_ack::suceed_mails(int index) const {
  return suceed_mails_.Get(index);
}
inline ::SProtoSpace::mail_instance* mail_send_all_type_mail_ack::mutable_suceed_mails(int index) {
  return suceed_mails_.Mutable(index);
}
inline ::SProtoSpace::mail_instance* mail_send_all_type_mail_ack::add_suceed_mails() {
  return suceed_mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >&
mail_send_all_type_mail_ack::suceed_mails() const {
  return suceed_mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail_instance >*
mail_send_all_type_mail_ack::mutable_suceed_mails() {
  return &suceed_mails_;
}

// -------------------------------------------------------------------

// mail_get_game_all_role_ids_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_get_game_all_role_ids_req_id];
inline bool mail_get_game_all_role_ids_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_get_game_all_role_ids_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_get_game_all_role_ids_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_get_game_all_role_ids_req::clear_protoid() {
  protoid_ = 325;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_get_game_all_role_ids_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_get_game_all_role_ids_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 mail_template_id = 2;
inline bool mail_get_game_all_role_ids_req::has_mail_template_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_get_game_all_role_ids_req::set_has_mail_template_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_get_game_all_role_ids_req::clear_has_mail_template_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_get_game_all_role_ids_req::clear_mail_template_id() {
  mail_template_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_template_id();
}
inline ::google::protobuf::uint64 mail_get_game_all_role_ids_req::mail_template_id() const {
  return mail_template_id_;
}
inline void mail_get_game_all_role_ids_req::set_mail_template_id(::google::protobuf::uint64 value) {
  set_has_mail_template_id();
  mail_template_id_ = value;
}

// -------------------------------------------------------------------

// mail_get_game_all_role_ids_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_get_game_all_role_ids_ack_id];
inline bool mail_get_game_all_role_ids_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_get_game_all_role_ids_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_get_game_all_role_ids_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_get_game_all_role_ids_ack::clear_protoid() {
  protoid_ = 326;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_get_game_all_role_ids_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_get_game_all_role_ids_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// repeated uint64 role_ids = 2;
inline int mail_get_game_all_role_ids_ack::role_ids_size() const {
  return role_ids_.size();
}
inline void mail_get_game_all_role_ids_ack::clear_role_ids() {
  role_ids_.Clear();
}
inline ::google::protobuf::uint64 mail_get_game_all_role_ids_ack::role_ids(int index) const {
  return role_ids_.Get(index);
}
inline void mail_get_game_all_role_ids_ack::set_role_ids(int index, ::google::protobuf::uint64 value) {
  role_ids_.Set(index, value);
}
inline void mail_get_game_all_role_ids_ack::add_role_ids(::google::protobuf::uint64 value) {
  role_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
mail_get_game_all_role_ids_ack::role_ids() const {
  return role_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
mail_get_game_all_role_ids_ack::mutable_role_ids() {
  return &role_ids_;
}

// optional uint64 mail_template_id = 3;
inline bool mail_get_game_all_role_ids_ack::has_mail_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_get_game_all_role_ids_ack::set_has_mail_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_get_game_all_role_ids_ack::clear_has_mail_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_get_game_all_role_ids_ack::clear_mail_template_id() {
  mail_template_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_template_id();
}
inline ::google::protobuf::uint64 mail_get_game_all_role_ids_ack::mail_template_id() const {
  return mail_template_id_;
}
inline void mail_get_game_all_role_ids_ack::set_mail_template_id(::google::protobuf::uint64 value) {
  set_has_mail_template_id();
  mail_template_id_ = value;
}

// -------------------------------------------------------------------

// mail_svr_pressure_ntf

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_svr_pressure_ntf_id];
inline bool mail_svr_pressure_ntf::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_svr_pressure_ntf::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_svr_pressure_ntf::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_svr_pressure_ntf::clear_protoid() {
  protoid_ = 329;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_svr_pressure_ntf::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_svr_pressure_ntf::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 sql_pre_count = 2;
inline bool mail_svr_pressure_ntf::has_sql_pre_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_svr_pressure_ntf::set_has_sql_pre_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_svr_pressure_ntf::clear_has_sql_pre_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_svr_pressure_ntf::clear_sql_pre_count() {
  sql_pre_count_ = GOOGLE_ULONGLONG(0);
  clear_has_sql_pre_count();
}
inline ::google::protobuf::uint64 mail_svr_pressure_ntf::sql_pre_count() const {
  return sql_pre_count_;
}
inline void mail_svr_pressure_ntf::set_sql_pre_count(::google::protobuf::uint64 value) {
  set_has_sql_pre_count();
  sql_pre_count_ = value;
}

// optional uint64 sql_run_count = 3;
inline bool mail_svr_pressure_ntf::has_sql_run_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_svr_pressure_ntf::set_has_sql_run_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_svr_pressure_ntf::clear_has_sql_run_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_svr_pressure_ntf::clear_sql_run_count() {
  sql_run_count_ = GOOGLE_ULONGLONG(0);
  clear_has_sql_run_count();
}
inline ::google::protobuf::uint64 mail_svr_pressure_ntf::sql_run_count() const {
  return sql_run_count_;
}
inline void mail_svr_pressure_ntf::set_sql_run_count(::google::protobuf::uint64 value) {
  set_has_sql_run_count();
  sql_run_count_ = value;
}

// optional int32 game_count = 4;
inline bool mail_svr_pressure_ntf::has_game_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mail_svr_pressure_ntf::set_has_game_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mail_svr_pressure_ntf::clear_has_game_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mail_svr_pressure_ntf::clear_game_count() {
  game_count_ = 0;
  clear_has_game_count();
}
inline ::google::protobuf::int32 mail_svr_pressure_ntf::game_count() const {
  return game_count_;
}
inline void mail_svr_pressure_ntf::set_game_count(::google::protobuf::int32 value) {
  set_has_game_count();
  game_count_ = value;
}

// optional int32 mail_count = 5;
inline bool mail_svr_pressure_ntf::has_mail_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mail_svr_pressure_ntf::set_has_mail_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mail_svr_pressure_ntf::clear_has_mail_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mail_svr_pressure_ntf::clear_mail_count() {
  mail_count_ = 0;
  clear_has_mail_count();
}
inline ::google::protobuf::int32 mail_svr_pressure_ntf::mail_count() const {
  return mail_count_;
}
inline void mail_svr_pressure_ntf::set_mail_count(::google::protobuf::int32 value) {
  set_has_mail_count();
  mail_count_ = value;
}

// -------------------------------------------------------------------

// del_ss_mul_mails_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = del_ss_mul_mails_req_id];
inline bool del_ss_mul_mails_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void del_ss_mul_mails_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void del_ss_mul_mails_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void del_ss_mul_mails_req::clear_protoid() {
  protoid_ = 350;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID del_ss_mul_mails_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void del_ss_mul_mails_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// repeated uint64 mail_id_s = 2;
inline int del_ss_mul_mails_req::mail_id_s_size() const {
  return mail_id_s_.size();
}
inline void del_ss_mul_mails_req::clear_mail_id_s() {
  mail_id_s_.Clear();
}
inline ::google::protobuf::uint64 del_ss_mul_mails_req::mail_id_s(int index) const {
  return mail_id_s_.Get(index);
}
inline void del_ss_mul_mails_req::set_mail_id_s(int index, ::google::protobuf::uint64 value) {
  mail_id_s_.Set(index, value);
}
inline void del_ss_mul_mails_req::add_mail_id_s(::google::protobuf::uint64 value) {
  mail_id_s_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
del_ss_mul_mails_req::mail_id_s() const {
  return mail_id_s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
del_ss_mul_mails_req::mutable_mail_id_s() {
  return &mail_id_s_;
}

// optional uint64 role_id = 3;
inline bool del_ss_mul_mails_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void del_ss_mul_mails_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void del_ss_mul_mails_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void del_ss_mul_mails_req::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 del_ss_mul_mails_req::role_id() const {
  return role_id_;
}
inline void del_ss_mul_mails_req::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint64 game_id = 4;
inline bool del_ss_mul_mails_req::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void del_ss_mul_mails_req::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void del_ss_mul_mails_req::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void del_ss_mul_mails_req::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 del_ss_mul_mails_req::game_id() const {
  return game_id_;
}
inline void del_ss_mul_mails_req::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional bool server_side_opt = 5;
inline bool del_ss_mul_mails_req::has_server_side_opt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void del_ss_mul_mails_req::set_has_server_side_opt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void del_ss_mul_mails_req::clear_has_server_side_opt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void del_ss_mul_mails_req::clear_server_side_opt() {
  server_side_opt_ = false;
  clear_has_server_side_opt();
}
inline bool del_ss_mul_mails_req::server_side_opt() const {
  return server_side_opt_;
}
inline void del_ss_mul_mails_req::set_server_side_opt(bool value) {
  set_has_server_side_opt();
  server_side_opt_ = value;
}

// -------------------------------------------------------------------

// del_ss_mul_mails_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = del_ss_mul_mails_ack_id];
inline bool del_ss_mul_mails_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void del_ss_mul_mails_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void del_ss_mul_mails_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void del_ss_mul_mails_ack::clear_protoid() {
  protoid_ = 351;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID del_ss_mul_mails_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void del_ss_mul_mails_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// repeated uint64 mail_id_s = 2;
inline int del_ss_mul_mails_ack::mail_id_s_size() const {
  return mail_id_s_.size();
}
inline void del_ss_mul_mails_ack::clear_mail_id_s() {
  mail_id_s_.Clear();
}
inline ::google::protobuf::uint64 del_ss_mul_mails_ack::mail_id_s(int index) const {
  return mail_id_s_.Get(index);
}
inline void del_ss_mul_mails_ack::set_mail_id_s(int index, ::google::protobuf::uint64 value) {
  mail_id_s_.Set(index, value);
}
inline void del_ss_mul_mails_ack::add_mail_id_s(::google::protobuf::uint64 value) {
  mail_id_s_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
del_ss_mul_mails_ack::mail_id_s() const {
  return mail_id_s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
del_ss_mul_mails_ack::mutable_mail_id_s() {
  return &mail_id_s_;
}

// optional uint64 role_id = 3;
inline bool del_ss_mul_mails_ack::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void del_ss_mul_mails_ack::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void del_ss_mul_mails_ack::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void del_ss_mul_mails_ack::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 del_ss_mul_mails_ack::role_id() const {
  return role_id_;
}
inline void del_ss_mul_mails_ack::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional .SProtoSpace.MsgErrorType error = 4;
inline bool del_ss_mul_mails_ack::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void del_ss_mul_mails_ack::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void del_ss_mul_mails_ack::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void del_ss_mul_mails_ack::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::SProtoSpace::MsgErrorType del_ss_mul_mails_ack::error() const {
  return static_cast< ::SProtoSpace::MsgErrorType >(error_);
}
inline void del_ss_mul_mails_ack::set_error(::SProtoSpace::MsgErrorType value) {
  assert(::SProtoSpace::MsgErrorType_IsValid(value));
  set_has_error();
  error_ = value;
}

// optional bool server_side_opt = 5;
inline bool del_ss_mul_mails_ack::has_server_side_opt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void del_ss_mul_mails_ack::set_has_server_side_opt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void del_ss_mul_mails_ack::clear_has_server_side_opt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void del_ss_mul_mails_ack::clear_server_side_opt() {
  server_side_opt_ = false;
  clear_has_server_side_opt();
}
inline bool del_ss_mul_mails_ack::server_side_opt() const {
  return server_side_opt_;
}
inline void del_ss_mul_mails_ack::set_server_side_opt(bool value) {
  set_has_server_side_opt();
  server_side_opt_ = value;
}

// -------------------------------------------------------------------

// sync_ss_mul_mails_state_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = sync_ss_mul_mails_state_req_id];
inline bool sync_ss_mul_mails_state_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sync_ss_mul_mails_state_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sync_ss_mul_mails_state_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sync_ss_mul_mails_state_req::clear_protoid() {
  protoid_ = 352;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID sync_ss_mul_mails_state_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void sync_ss_mul_mails_state_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// repeated uint64 mail_id_s = 2;
inline int sync_ss_mul_mails_state_req::mail_id_s_size() const {
  return mail_id_s_.size();
}
inline void sync_ss_mul_mails_state_req::clear_mail_id_s() {
  mail_id_s_.Clear();
}
inline ::google::protobuf::uint64 sync_ss_mul_mails_state_req::mail_id_s(int index) const {
  return mail_id_s_.Get(index);
}
inline void sync_ss_mul_mails_state_req::set_mail_id_s(int index, ::google::protobuf::uint64 value) {
  mail_id_s_.Set(index, value);
}
inline void sync_ss_mul_mails_state_req::add_mail_id_s(::google::protobuf::uint64 value) {
  mail_id_s_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
sync_ss_mul_mails_state_req::mail_id_s() const {
  return mail_id_s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
sync_ss_mul_mails_state_req::mutable_mail_id_s() {
  return &mail_id_s_;
}

// optional uint64 role_id = 3;
inline bool sync_ss_mul_mails_state_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sync_ss_mul_mails_state_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sync_ss_mul_mails_state_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sync_ss_mul_mails_state_req::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 sync_ss_mul_mails_state_req::role_id() const {
  return role_id_;
}
inline void sync_ss_mul_mails_state_req::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint64 game_id = 4;
inline bool sync_ss_mul_mails_state_req::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void sync_ss_mul_mails_state_req::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void sync_ss_mul_mails_state_req::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void sync_ss_mul_mails_state_req::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 sync_ss_mul_mails_state_req::game_id() const {
  return game_id_;
}
inline void sync_ss_mul_mails_state_req::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional bool read_state = 5;
inline bool sync_ss_mul_mails_state_req::has_read_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void sync_ss_mul_mails_state_req::set_has_read_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void sync_ss_mul_mails_state_req::clear_has_read_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void sync_ss_mul_mails_state_req::clear_read_state() {
  read_state_ = false;
  clear_has_read_state();
}
inline bool sync_ss_mul_mails_state_req::read_state() const {
  return read_state_;
}
inline void sync_ss_mul_mails_state_req::set_read_state(bool value) {
  set_has_read_state();
  read_state_ = value;
}

// optional bool get_attach_state = 6;
inline bool sync_ss_mul_mails_state_req::has_get_attach_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void sync_ss_mul_mails_state_req::set_has_get_attach_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void sync_ss_mul_mails_state_req::clear_has_get_attach_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void sync_ss_mul_mails_state_req::clear_get_attach_state() {
  get_attach_state_ = false;
  clear_has_get_attach_state();
}
inline bool sync_ss_mul_mails_state_req::get_attach_state() const {
  return get_attach_state_;
}
inline void sync_ss_mul_mails_state_req::set_get_attach_state(bool value) {
  set_has_get_attach_state();
  get_attach_state_ = value;
}

// -------------------------------------------------------------------

// sync_ss_mul_mails_state_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = sync_ss_mul_mails_state_ack_id];
inline bool sync_ss_mul_mails_state_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sync_ss_mul_mails_state_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sync_ss_mul_mails_state_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sync_ss_mul_mails_state_ack::clear_protoid() {
  protoid_ = 353;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID sync_ss_mul_mails_state_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void sync_ss_mul_mails_state_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// repeated uint64 mail_id_s = 2;
inline int sync_ss_mul_mails_state_ack::mail_id_s_size() const {
  return mail_id_s_.size();
}
inline void sync_ss_mul_mails_state_ack::clear_mail_id_s() {
  mail_id_s_.Clear();
}
inline ::google::protobuf::uint64 sync_ss_mul_mails_state_ack::mail_id_s(int index) const {
  return mail_id_s_.Get(index);
}
inline void sync_ss_mul_mails_state_ack::set_mail_id_s(int index, ::google::protobuf::uint64 value) {
  mail_id_s_.Set(index, value);
}
inline void sync_ss_mul_mails_state_ack::add_mail_id_s(::google::protobuf::uint64 value) {
  mail_id_s_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
sync_ss_mul_mails_state_ack::mail_id_s() const {
  return mail_id_s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
sync_ss_mul_mails_state_ack::mutable_mail_id_s() {
  return &mail_id_s_;
}

// optional uint64 role_id = 3;
inline bool sync_ss_mul_mails_state_ack::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sync_ss_mul_mails_state_ack::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sync_ss_mul_mails_state_ack::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sync_ss_mul_mails_state_ack::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 sync_ss_mul_mails_state_ack::role_id() const {
  return role_id_;
}
inline void sync_ss_mul_mails_state_ack::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional .SProtoSpace.MsgErrorType error = 4;
inline bool sync_ss_mul_mails_state_ack::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void sync_ss_mul_mails_state_ack::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void sync_ss_mul_mails_state_ack::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void sync_ss_mul_mails_state_ack::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::SProtoSpace::MsgErrorType sync_ss_mul_mails_state_ack::error() const {
  return static_cast< ::SProtoSpace::MsgErrorType >(error_);
}
inline void sync_ss_mul_mails_state_ack::set_error(::SProtoSpace::MsgErrorType value) {
  assert(::SProtoSpace::MsgErrorType_IsValid(value));
  set_has_error();
  error_ = value;
}

// optional bool read_state = 5;
inline bool sync_ss_mul_mails_state_ack::has_read_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void sync_ss_mul_mails_state_ack::set_has_read_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void sync_ss_mul_mails_state_ack::clear_has_read_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void sync_ss_mul_mails_state_ack::clear_read_state() {
  read_state_ = false;
  clear_has_read_state();
}
inline bool sync_ss_mul_mails_state_ack::read_state() const {
  return read_state_;
}
inline void sync_ss_mul_mails_state_ack::set_read_state(bool value) {
  set_has_read_state();
  read_state_ = value;
}

// optional bool get_attach_state = 6;
inline bool sync_ss_mul_mails_state_ack::has_get_attach_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void sync_ss_mul_mails_state_ack::set_has_get_attach_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void sync_ss_mul_mails_state_ack::clear_has_get_attach_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void sync_ss_mul_mails_state_ack::clear_get_attach_state() {
  get_attach_state_ = false;
  clear_has_get_attach_state();
}
inline bool sync_ss_mul_mails_state_ack::get_attach_state() const {
  return get_attach_state_;
}
inline void sync_ss_mul_mails_state_ack::set_get_attach_state(bool value) {
  set_has_get_attach_state();
  get_attach_state_ = value;
}

// -------------------------------------------------------------------

// get_mails_ss_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = get_mails_ss_req_id];
inline bool get_mails_ss_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_mails_ss_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_mails_ss_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_mails_ss_req::clear_protoid() {
  protoid_ = 354;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID get_mails_ss_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void get_mails_ss_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool get_mails_ss_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_mails_ss_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_mails_ss_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_mails_ss_req::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 get_mails_ss_req::role_id() const {
  return role_id_;
}
inline void get_mails_ss_req::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint64 time = 3;
inline bool get_mails_ss_req::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void get_mails_ss_req::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void get_mails_ss_req::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void get_mails_ss_req::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 get_mails_ss_req::time() const {
  return time_;
}
inline void get_mails_ss_req::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// optional uint64 game_id = 4;
inline bool get_mails_ss_req::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void get_mails_ss_req::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void get_mails_ss_req::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void get_mails_ss_req::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 get_mails_ss_req::game_id() const {
  return game_id_;
}
inline void get_mails_ss_req::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// -------------------------------------------------------------------

// get_mails_ss_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = get_mails_ss_ack_id];
inline bool get_mails_ss_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_mails_ss_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_mails_ss_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_mails_ss_ack::clear_protoid() {
  protoid_ = 355;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID get_mails_ss_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void get_mails_ss_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool get_mails_ss_ack::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_mails_ss_ack::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_mails_ss_ack::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_mails_ss_ack::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 get_mails_ss_ack::role_id() const {
  return role_id_;
}
inline void get_mails_ss_ack::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint64 time = 3;
inline bool get_mails_ss_ack::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void get_mails_ss_ack::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void get_mails_ss_ack::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void get_mails_ss_ack::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 get_mails_ss_ack::time() const {
  return time_;
}
inline void get_mails_ss_ack::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// gen_mails_ss_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = gen_mails_ss_req_id];
inline bool gen_mails_ss_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gen_mails_ss_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gen_mails_ss_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gen_mails_ss_req::clear_protoid() {
  protoid_ = 356;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID gen_mails_ss_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void gen_mails_ss_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool gen_mails_ss_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gen_mails_ss_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gen_mails_ss_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gen_mails_ss_req::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 gen_mails_ss_req::role_id() const {
  return role_id_;
}
inline void gen_mails_ss_req::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint64 time = 3;
inline bool gen_mails_ss_req::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gen_mails_ss_req::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gen_mails_ss_req::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gen_mails_ss_req::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 gen_mails_ss_req::time() const {
  return time_;
}
inline void gen_mails_ss_req::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// optional uint64 game_id = 4;
inline bool gen_mails_ss_req::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gen_mails_ss_req::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gen_mails_ss_req::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gen_mails_ss_req::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 gen_mails_ss_req::game_id() const {
  return game_id_;
}
inline void gen_mails_ss_req::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint64 max_id = 5;
inline bool gen_mails_ss_req::has_max_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gen_mails_ss_req::set_has_max_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gen_mails_ss_req::clear_has_max_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gen_mails_ss_req::clear_max_id() {
  max_id_ = GOOGLE_ULONGLONG(0);
  clear_has_max_id();
}
inline ::google::protobuf::uint64 gen_mails_ss_req::max_id() const {
  return max_id_;
}
inline void gen_mails_ss_req::set_max_id(::google::protobuf::uint64 value) {
  set_has_max_id();
  max_id_ = value;
}

// -------------------------------------------------------------------

// gen_mails_ss_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = gen_mails_ss_ack_id];
inline bool gen_mails_ss_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gen_mails_ss_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gen_mails_ss_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gen_mails_ss_ack::clear_protoid() {
  protoid_ = 357;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID gen_mails_ss_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void gen_mails_ss_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// repeated .SProtoSpace.mail mails = 2;
inline int gen_mails_ss_ack::mails_size() const {
  return mails_.size();
}
inline void gen_mails_ss_ack::clear_mails() {
  mails_.Clear();
}
inline const ::SProtoSpace::mail& gen_mails_ss_ack::mails(int index) const {
  return mails_.Get(index);
}
inline ::SProtoSpace::mail* gen_mails_ss_ack::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::SProtoSpace::mail* gen_mails_ss_ack::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail >&
gen_mails_ss_ack::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::SProtoSpace::mail >*
gen_mails_ss_ack::mutable_mails() {
  return &mails_;
}

// optional uint64 role_id = 3;
inline bool gen_mails_ss_ack::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gen_mails_ss_ack::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gen_mails_ss_ack::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gen_mails_ss_ack::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 gen_mails_ss_ack::role_id() const {
  return role_id_;
}
inline void gen_mails_ss_ack::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// -------------------------------------------------------------------

// send_mail_ss_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = send_mail_ss_req_id];
inline bool send_mail_ss_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void send_mail_ss_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void send_mail_ss_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void send_mail_ss_req::clear_protoid() {
  protoid_ = 358;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID send_mail_ss_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void send_mail_ss_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional .SProtoSpace.mail mail = 2;
inline bool send_mail_ss_req::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void send_mail_ss_req::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void send_mail_ss_req::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void send_mail_ss_req::clear_mail() {
  if (mail_ != NULL) mail_->::SProtoSpace::mail::Clear();
  clear_has_mail();
}
inline const ::SProtoSpace::mail& send_mail_ss_req::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::SProtoSpace::mail* send_mail_ss_req::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::SProtoSpace::mail;
  return mail_;
}
inline ::SProtoSpace::mail* send_mail_ss_req::release_mail() {
  clear_has_mail();
  ::SProtoSpace::mail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void send_mail_ss_req::set_allocated_mail(::SProtoSpace::mail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// optional uint64 game_id = 3;
inline bool send_mail_ss_req::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void send_mail_ss_req::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void send_mail_ss_req::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void send_mail_ss_req::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 send_mail_ss_req::game_id() const {
  return game_id_;
}
inline void send_mail_ss_req::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint64 to_role_id = 4;
inline bool send_mail_ss_req::has_to_role_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void send_mail_ss_req::set_has_to_role_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void send_mail_ss_req::clear_has_to_role_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void send_mail_ss_req::clear_to_role_id() {
  to_role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_role_id();
}
inline ::google::protobuf::uint64 send_mail_ss_req::to_role_id() const {
  return to_role_id_;
}
inline void send_mail_ss_req::set_to_role_id(::google::protobuf::uint64 value) {
  set_has_to_role_id();
  to_role_id_ = value;
}

// optional string to_role_name = 5;
inline bool send_mail_ss_req::has_to_role_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void send_mail_ss_req::set_has_to_role_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void send_mail_ss_req::clear_has_to_role_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void send_mail_ss_req::clear_to_role_name() {
  if (to_role_name_ != &::google::protobuf::internal::kEmptyString) {
    to_role_name_->clear();
  }
  clear_has_to_role_name();
}
inline const ::std::string& send_mail_ss_req::to_role_name() const {
  return *to_role_name_;
}
inline void send_mail_ss_req::set_to_role_name(const ::std::string& value) {
  set_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    to_role_name_ = new ::std::string;
  }
  to_role_name_->assign(value);
}
inline void send_mail_ss_req::set_to_role_name(const char* value) {
  set_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    to_role_name_ = new ::std::string;
  }
  to_role_name_->assign(value);
}
inline void send_mail_ss_req::set_to_role_name(const char* value, size_t size) {
  set_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    to_role_name_ = new ::std::string;
  }
  to_role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* send_mail_ss_req::mutable_to_role_name() {
  set_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    to_role_name_ = new ::std::string;
  }
  return to_role_name_;
}
inline ::std::string* send_mail_ss_req::release_to_role_name() {
  clear_has_to_role_name();
  if (to_role_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = to_role_name_;
    to_role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void send_mail_ss_req::set_allocated_to_role_name(::std::string* to_role_name) {
  if (to_role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete to_role_name_;
  }
  if (to_role_name) {
    set_has_to_role_name();
    to_role_name_ = to_role_name;
  } else {
    clear_has_to_role_name();
    to_role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .SProtoSpace.eSendMailType type = 6;
inline bool send_mail_ss_req::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void send_mail_ss_req::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void send_mail_ss_req::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void send_mail_ss_req::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::SProtoSpace::eSendMailType send_mail_ss_req::type() const {
  return static_cast< ::SProtoSpace::eSendMailType >(type_);
}
inline void send_mail_ss_req::set_type(::SProtoSpace::eSendMailType value) {
  assert(::SProtoSpace::eSendMailType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional bool send_back = 7;
inline bool send_mail_ss_req::has_send_back() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void send_mail_ss_req::set_has_send_back() {
  _has_bits_[0] |= 0x00000040u;
}
inline void send_mail_ss_req::clear_has_send_back() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void send_mail_ss_req::clear_send_back() {
  send_back_ = false;
  clear_has_send_back();
}
inline bool send_mail_ss_req::send_back() const {
  return send_back_;
}
inline void send_mail_ss_req::set_send_back(bool value) {
  set_has_send_back();
  send_back_ = value;
}

// -------------------------------------------------------------------

// send_mail_ss_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = send_mail_ss_ack_id];
inline bool send_mail_ss_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void send_mail_ss_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void send_mail_ss_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void send_mail_ss_ack::clear_protoid() {
  protoid_ = 359;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID send_mail_ss_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void send_mail_ss_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional .SProtoSpace.mail mail = 2;
inline bool send_mail_ss_ack::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void send_mail_ss_ack::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void send_mail_ss_ack::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void send_mail_ss_ack::clear_mail() {
  if (mail_ != NULL) mail_->::SProtoSpace::mail::Clear();
  clear_has_mail();
}
inline const ::SProtoSpace::mail& send_mail_ss_ack::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::SProtoSpace::mail* send_mail_ss_ack::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::SProtoSpace::mail;
  return mail_;
}
inline ::SProtoSpace::mail* send_mail_ss_ack::release_mail() {
  clear_has_mail();
  ::SProtoSpace::mail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void send_mail_ss_ack::set_allocated_mail(::SProtoSpace::mail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// optional uint64 game_id = 3;
inline bool send_mail_ss_ack::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void send_mail_ss_ack::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void send_mail_ss_ack::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void send_mail_ss_ack::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 send_mail_ss_ack::game_id() const {
  return game_id_;
}
inline void send_mail_ss_ack::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional .SProtoSpace.MsgErrorType error = 4;
inline bool send_mail_ss_ack::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void send_mail_ss_ack::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void send_mail_ss_ack::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void send_mail_ss_ack::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::SProtoSpace::MsgErrorType send_mail_ss_ack::error() const {
  return static_cast< ::SProtoSpace::MsgErrorType >(error_);
}
inline void send_mail_ss_ack::set_error(::SProtoSpace::MsgErrorType value) {
  assert(::SProtoSpace::MsgErrorType_IsValid(value));
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// recv_mail_ss_ntf

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = recv_mail_ss_ntf_id];
inline bool recv_mail_ss_ntf::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void recv_mail_ss_ntf::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void recv_mail_ss_ntf::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void recv_mail_ss_ntf::clear_protoid() {
  protoid_ = 360;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID recv_mail_ss_ntf::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void recv_mail_ss_ntf::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional .SProtoSpace.mail mail = 2;
inline bool recv_mail_ss_ntf::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void recv_mail_ss_ntf::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void recv_mail_ss_ntf::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void recv_mail_ss_ntf::clear_mail() {
  if (mail_ != NULL) mail_->::SProtoSpace::mail::Clear();
  clear_has_mail();
}
inline const ::SProtoSpace::mail& recv_mail_ss_ntf::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::SProtoSpace::mail* recv_mail_ss_ntf::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::SProtoSpace::mail;
  return mail_;
}
inline ::SProtoSpace::mail* recv_mail_ss_ntf::release_mail() {
  clear_has_mail();
  ::SProtoSpace::mail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void recv_mail_ss_ntf::set_allocated_mail(::SProtoSpace::mail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// optional uint64 game_id = 3;
inline bool recv_mail_ss_ntf::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void recv_mail_ss_ntf::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void recv_mail_ss_ntf::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void recv_mail_ss_ntf::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 recv_mail_ss_ntf::game_id() const {
  return game_id_;
}
inline void recv_mail_ss_ntf::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional .SProtoSpace.MsgErrorType error = 4;
inline bool recv_mail_ss_ntf::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void recv_mail_ss_ntf::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void recv_mail_ss_ntf::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void recv_mail_ss_ntf::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::SProtoSpace::MsgErrorType recv_mail_ss_ntf::error() const {
  return static_cast< ::SProtoSpace::MsgErrorType >(error_);
}
inline void recv_mail_ss_ntf::set_error(::SProtoSpace::MsgErrorType value) {
  assert(::SProtoSpace::MsgErrorType_IsValid(value));
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// mail_add_template_ss_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_add_template_ss_req_id];
inline bool mail_add_template_ss_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_add_template_ss_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_add_template_ss_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_add_template_ss_req::clear_protoid() {
  protoid_ = 361;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_add_template_ss_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_add_template_ss_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional .SProtoSpace.eMailAddTemplateType type = 2;
inline bool mail_add_template_ss_req::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_add_template_ss_req::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_add_template_ss_req::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_add_template_ss_req::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::SProtoSpace::eMailAddTemplateType mail_add_template_ss_req::type() const {
  return static_cast< ::SProtoSpace::eMailAddTemplateType >(type_);
}
inline void mail_add_template_ss_req::set_type(::SProtoSpace::eMailAddTemplateType value) {
  assert(::SProtoSpace::eMailAddTemplateType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .SProtoSpace.mail_template template = 3;
inline bool mail_add_template_ss_req::has_template_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_add_template_ss_req::set_has_template_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_add_template_ss_req::clear_has_template_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_add_template_ss_req::clear_template_() {
  if (template__ != NULL) template__->::SProtoSpace::mail_template::Clear();
  clear_has_template_();
}
inline const ::SProtoSpace::mail_template& mail_add_template_ss_req::template_() const {
  return template__ != NULL ? *template__ : *default_instance_->template__;
}
inline ::SProtoSpace::mail_template* mail_add_template_ss_req::mutable_template_() {
  set_has_template_();
  if (template__ == NULL) template__ = new ::SProtoSpace::mail_template;
  return template__;
}
inline ::SProtoSpace::mail_template* mail_add_template_ss_req::release_template_() {
  clear_has_template_();
  ::SProtoSpace::mail_template* temp = template__;
  template__ = NULL;
  return temp;
}
inline void mail_add_template_ss_req::set_allocated_template_(::SProtoSpace::mail_template* template_) {
  delete template__;
  template__ = template_;
  if (template_) {
    set_has_template_();
  } else {
    clear_has_template_();
  }
}

// -------------------------------------------------------------------

// mail_add_template_ss_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_add_template_ss_ack_id];
inline bool mail_add_template_ss_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_add_template_ss_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_add_template_ss_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_add_template_ss_ack::clear_protoid() {
  protoid_ = 362;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_add_template_ss_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_add_template_ss_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional .SProtoSpace.eMailAddTemplateType type = 2;
inline bool mail_add_template_ss_ack::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_add_template_ss_ack::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_add_template_ss_ack::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_add_template_ss_ack::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::SProtoSpace::eMailAddTemplateType mail_add_template_ss_ack::type() const {
  return static_cast< ::SProtoSpace::eMailAddTemplateType >(type_);
}
inline void mail_add_template_ss_ack::set_type(::SProtoSpace::eMailAddTemplateType value) {
  assert(::SProtoSpace::eMailAddTemplateType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .SProtoSpace.mail_template template = 3;
inline bool mail_add_template_ss_ack::has_template_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_add_template_ss_ack::set_has_template_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_add_template_ss_ack::clear_has_template_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_add_template_ss_ack::clear_template_() {
  if (template__ != NULL) template__->::SProtoSpace::mail_template::Clear();
  clear_has_template_();
}
inline const ::SProtoSpace::mail_template& mail_add_template_ss_ack::template_() const {
  return template__ != NULL ? *template__ : *default_instance_->template__;
}
inline ::SProtoSpace::mail_template* mail_add_template_ss_ack::mutable_template_() {
  set_has_template_();
  if (template__ == NULL) template__ = new ::SProtoSpace::mail_template;
  return template__;
}
inline ::SProtoSpace::mail_template* mail_add_template_ss_ack::release_template_() {
  clear_has_template_();
  ::SProtoSpace::mail_template* temp = template__;
  template__ = NULL;
  return temp;
}
inline void mail_add_template_ss_ack::set_allocated_template_(::SProtoSpace::mail_template* template_) {
  delete template__;
  template__ = template_;
  if (template_) {
    set_has_template_();
  } else {
    clear_has_template_();
  }
}

// -------------------------------------------------------------------

// mail_add_template_ss_ntf

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_add_template_ss_ntf_id];
inline bool mail_add_template_ss_ntf::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_add_template_ss_ntf::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_add_template_ss_ntf::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_add_template_ss_ntf::clear_protoid() {
  protoid_ = 363;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_add_template_ss_ntf::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_add_template_ss_ntf::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional .SProtoSpace.eMailAddTemplateType type = 2;
inline bool mail_add_template_ss_ntf::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_add_template_ss_ntf::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_add_template_ss_ntf::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_add_template_ss_ntf::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::SProtoSpace::eMailAddTemplateType mail_add_template_ss_ntf::type() const {
  return static_cast< ::SProtoSpace::eMailAddTemplateType >(type_);
}
inline void mail_add_template_ss_ntf::set_type(::SProtoSpace::eMailAddTemplateType value) {
  assert(::SProtoSpace::eMailAddTemplateType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .SProtoSpace.mail_template template = 3;
inline bool mail_add_template_ss_ntf::has_template_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_add_template_ss_ntf::set_has_template_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_add_template_ss_ntf::clear_has_template_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_add_template_ss_ntf::clear_template_() {
  if (template__ != NULL) template__->::SProtoSpace::mail_template::Clear();
  clear_has_template_();
}
inline const ::SProtoSpace::mail_template& mail_add_template_ss_ntf::template_() const {
  return template__ != NULL ? *template__ : *default_instance_->template__;
}
inline ::SProtoSpace::mail_template* mail_add_template_ss_ntf::mutable_template_() {
  set_has_template_();
  if (template__ == NULL) template__ = new ::SProtoSpace::mail_template;
  return template__;
}
inline ::SProtoSpace::mail_template* mail_add_template_ss_ntf::release_template_() {
  clear_has_template_();
  ::SProtoSpace::mail_template* temp = template__;
  template__ = NULL;
  return temp;
}
inline void mail_add_template_ss_ntf::set_allocated_template_(::SProtoSpace::mail_template* template_) {
  delete template__;
  template__ = template_;
  if (template_) {
    set_has_template_();
  } else {
    clear_has_template_();
  }
}

// -------------------------------------------------------------------

// mail_new_template_ss_ntf

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_new_template_ss_ntf_id];
inline bool mail_new_template_ss_ntf::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_new_template_ss_ntf::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_new_template_ss_ntf::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_new_template_ss_ntf::clear_protoid() {
  protoid_ = 364;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_new_template_ss_ntf::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_new_template_ss_ntf::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// -------------------------------------------------------------------

// mail_red_pt_ss_req

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_red_pt_ss_req_id];
inline bool mail_red_pt_ss_req::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_red_pt_ss_req::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_red_pt_ss_req::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_red_pt_ss_req::clear_protoid() {
  protoid_ = 365;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_red_pt_ss_req::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_red_pt_ss_req::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool mail_red_pt_ss_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_red_pt_ss_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_red_pt_ss_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_red_pt_ss_req::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 mail_red_pt_ss_req::role_id() const {
  return role_id_;
}
inline void mail_red_pt_ss_req::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint64 game_id = 3;
inline bool mail_red_pt_ss_req::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_red_pt_ss_req::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_red_pt_ss_req::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_red_pt_ss_req::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 mail_red_pt_ss_req::game_id() const {
  return game_id_;
}
inline void mail_red_pt_ss_req::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional uint64 mail_g_template = 4;
inline bool mail_red_pt_ss_req::has_mail_g_template() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mail_red_pt_ss_req::set_has_mail_g_template() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mail_red_pt_ss_req::clear_has_mail_g_template() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mail_red_pt_ss_req::clear_mail_g_template() {
  mail_g_template_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_g_template();
}
inline ::google::protobuf::uint64 mail_red_pt_ss_req::mail_g_template() const {
  return mail_g_template_;
}
inline void mail_red_pt_ss_req::set_mail_g_template(::google::protobuf::uint64 value) {
  set_has_mail_g_template();
  mail_g_template_ = value;
}

// -------------------------------------------------------------------

// mail_red_pt_ss_ack

// optional .SProtoSpace.ESSProtoID protoid = 1 [default = mail_red_pt_ss_ack_id];
inline bool mail_red_pt_ss_ack::has_protoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_red_pt_ss_ack::set_has_protoid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_red_pt_ss_ack::clear_has_protoid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_red_pt_ss_ack::clear_protoid() {
  protoid_ = 366;
  clear_has_protoid();
}
inline ::SProtoSpace::ESSProtoID mail_red_pt_ss_ack::protoid() const {
  return static_cast< ::SProtoSpace::ESSProtoID >(protoid_);
}
inline void mail_red_pt_ss_ack::set_protoid(::SProtoSpace::ESSProtoID value) {
  assert(::SProtoSpace::ESSProtoID_IsValid(value));
  set_has_protoid();
  protoid_ = value;
}

// optional uint64 role_id = 2;
inline bool mail_red_pt_ss_ack::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_red_pt_ss_ack::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_red_pt_ss_ack::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_red_pt_ss_ack::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 mail_red_pt_ss_ack::role_id() const {
  return role_id_;
}
inline void mail_red_pt_ss_ack::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SProtoSpace

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SProtoSpace::eMailAddTemplateType>() {
  return ::SProtoSpace::eMailAddTemplateType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ss_5fmail_2eproto__INCLUDED
